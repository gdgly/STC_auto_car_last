C51 COMPILER V9.01   SYSTEM_INIT                                                           07/15/2020 14:47:17 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE SYSTEM_INIT
OBJECT MODULE PLACED IN .\Out_File\System_Init.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\CODE\System_Init.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(..\..\Librar
                    -ies\libraries;..\..\Libraries\seekfree_libraries;..\..\Libraries\seekfree_peripheral;..\USER\inc;..\USER\src;..\CODE) DE
                    -BUG OBJECTEXTEND PRINT(.\Out_File\System_Init.lst) TABS(2) OBJECT(.\Out_File\System_Init.obj)

line level    source

   1          /*
   2           * @Description  : 
   3           * @Version      : 
   4           * @Date         : 2020-06-18 16:26:13
   5           * @LastEditTime : 2020-07-13 20:40:02
   6           */ 
   7          #include "System_Init.h"
   8          uchar System_OK = 0;
   9          int8 Voltage_add;
  10          int8 Voltage_check_time = 0;
  11          
  12          float Zero_Angle;
  13          float  Difference = 0,Differencelast=0;
  14          int8 Dif_Nor_coefficient;
  15          int8 K1,K2,K3,K4;
  16          float LAD,RAD,LADC,RADC; 
  17          int   I_LAD,I_LADC,I_RADC,I_RAD,
  18                O_I;
  19          float Voltage[2];
  20          
  21          void System_Init()
  22          {
  23   1        uint32 i;
  24   1      /************************ LED 初始化  *******************/
  25   1        gpio_mode(P52,GPO_PP);                
  26   1        LED1 = !LED1;                          // 打开LED指示灯  全部初始化成功
  27   1      /************************ 参数初始化 ********************/
  28   1        PID_Parameter_Init(&MOTOR_PID); // 速度环PID参数初始化
  29   1        PID_Parameter_Init(&Angle_PID); // 角度环PID参数初始化
  30   1        PID_Parameter_Init(&Ang_Vel_PID); // 角速度环PID参数初始化
  31   1        PID_Parameter_Init(&Direct_PID);  // 转向环PID参数初始化
  32   1        PID_Parameter_Init(&Distance_PID);  // 位置环PID参数初始化
  33   1        Curvature = 0;      // 初始化目标转向曲率为0
  34   1        Speed_Set = 280;      // 初始化目标速度为0
  35   1        Zero_Angle = 3;
  36   1        Target_Angle.Y = Zero_Angle*100;
  37   1      /************************ 电池电压 ************************/   
  38   1        adc_init(ADC_P10, ADC_SYSclk_DIV_2);           // 
  39   1        Voltage[1] = adc_once(ADC_P10, ADC_12BIT)*Voltage_co;
  40   1      /************************ 电机 初始化 ********************/
  41   1        pwm_init(MOTOR1_PWM,MOTOR_HZ,0);// 初始化 电机 PWM右前
  42   1        pwm_init(MOTOR2_PWM,MOTOR_HZ,0);// 初始化 电机 PWM右后 
  43   1        pwm_init(MOTOR3_PWM,MOTOR_HZ,0);// 初始化 电机 PWM左后 
  44   1        pwm_init(MOTOR4_PWM,MOTOR_HZ,0);// 初始化 电机 PWM左前
  45   1      /************************ 无线串口 初始化 ********************/
  46   1        uart_init(UART_4,UART4_RX_P02,UART4_TX_P03,115200,TIM_4);
  47   1      /************************ 定时器 初始化  *****************/ 
  48   1        pit_timer_ms(TIM_3, 2);
  49   1      /************************ 蜂鸣器初始化 ***********************/  
  50   1        gpio_mode(P4_4,GPO_PP);                //蜂鸣器初始化 
  51   1      /************************ 拨码开关 ***************************/  
  52   1        gpio_mode(P3_2,GPIO);
  53   1        gpio_pull_set(P3_2,PULLUP);          //使能上拉
C51 COMPILER V9.01   SYSTEM_INIT                                                           07/15/2020 14:47:17 PAGE 2   

  54   1        gpio_mode(P3_3,GPIO);
  55   1        gpio_pull_set(P3_3,PULLUP);          //使能上拉
  56   1      //  gpio_mode(P3_4,GPIO);
  57   1      //  gpio_pull_set(P3_4,PULLUP);          //使能上拉
  58   1      /************************ 停车管脚 ***************************/ 
  59   1        gpio_mode(P7_5,GPIO);
  60   1        gpio_pull_set(P7_5,PULLUP);          //使能上拉
  61   1      /************************ 按键屏幕初始化 **********************/ 
  62   1        gpio_mode(P4_0,GPIO);          //上
  63   1        gpio_pull_set(P4_0,PULLUP);          //使能上拉
  64   1        gpio_mode(P4_1,GPIO);          //下
  65   1        gpio_pull_set(P4_1,PULLUP);          //使能上拉
  66   1        gpio_mode(P4_2,GPIO);          //左
  67   1        gpio_pull_set(P4_2,PULLUP);          //使能上拉
  68   1        gpio_mode(P4_3,GPIO);          //右
  69   1        gpio_pull_set(P4_3,PULLUP);          //使能上拉
  70   1        gpio_mode(P4_4,GPIO);          //取消
  71   1        gpio_pull_set(P4_4,PULLUP);          //使能上拉
  72   1        gpio_mode(P4_5,GPIO);          //确定
  73   1        gpio_pull_set(P4_5,PULLUP);          //使能上拉
  74   1        OLED_Init();
  75   1      /************************ 编码器初始化 ************************/   
  76   1        gpio_mode(P3_5,GPIO);
  77   1        gpio_pull_set(P3_5,PULLUP);
  78   1        gpio_mode(P5_3,GPIO);
  79   1        gpio_pull_set(P5_3,PULLUP);   //以上两个端口是判断方向的
  80   1        ctimer_count_init(CTIM0_P34); 
  81   1        ctimer_count_init(CTIM3_P04); //以上两个端口是采集速度
  82   1      /*********************** 电感初始化 ***********************/
  83   1        adc_init(ADC_P00, ADC_SYSclk_DIV_2);         //
  84   1        adc_init(ADC_P01, ADC_SYSclk_DIV_2);         //
  85   1        adc_init(ADC_P02, ADC_SYSclk_DIV_2);        // 
  86   1        adc_init(ADC_P03, ADC_SYSclk_DIV_2);        // 
  87   1        //adc_init(ADC_P04, ADC_SYSclk_DIV_2);        // 
  88   1        //adc_init(ADC_P05, ADC_SYSclk_DIV_2);        // 
  89   1        LAD  = adc_once(ADC_P00, ADC_12BIT);
  90   1        LADC = adc_once(ADC_P01, ADC_12BIT);
  91   1        RAD  = adc_once(ADC_P02, ADC_12BIT);
  92   1        RADC = adc_once(ADC_P03, ADC_12BIT);
  93   1        Dif_Nor_coefficient = 50;               //差比和系数
  94   1      /*********************** 环岛标志位电感赋值 ***************/
  95   1        /***新车***/
  96   1        I_LAD =1900;                          
  97   1        I_LADC=900;                                 
  98   1        I_RADC=900;                                   
  99   1        I_RAD =1900; 
 100   1        O_I   =60;
 101   1      /************************ 陀螺仪 初始化 ******************/
 102   1        while (My_MPU6050_Init());
 103   1        for (i = 0; i < 100; i++)
 104   1        { 
 105   2          MPU6050_GetData(&GYRO,&ACC);
 106   2          Another_Get_Attitude(); // 姿态解算
 107   2          Tar_Ang_Vel.Y = PID_Realize(&Angle_PID, Angle, (int32)(Attitude_Angle.Y*100), Zero_Angle*100);
 108   2        }
 109   1        Run_Flag = 1;
 110   1      /*********************** 正确充电发车 ****************************/
 111   1      //结果是通过
 112   1      //正在充电---灯闪烁
 113   1      //充电完成---熄灯
 114   1      //充电故障---持续亮灯
 115   1      /*                         未测试
C51 COMPILER V9.01   SYSTEM_INIT                                                           07/15/2020 14:47:17 PAGE 3   

 116   1        while (!System_OK)
 117   1        {
 118   1          Voltage[0] = adc_once(ADC_P10, ADC_12BIT)*Voltage_co;
 119   1          if (Voltage_check_time > 10)   // 1s检测一次 
 120   1          {
 121   1            Voltage_check_time = 0;
 122   1            if(Voltage[0] <= Voltage[1])  //新值比旧值小或相同则 充电故障
 123   1              Voltage_add = 0;
 124   1            else
 125   1              voltage_add = 1;
 126   1            Voltage[1] = Voltage[0];     //更新 旧电压值
 127   1          }
 128   1          if (Voltage_add == 1)  //正常充电Voltage_add 为  1
 129   1          {
 130   1            LED1 = !LED1;        //灯闪烁
 131   1            delay_ms(100);
 132   1            Voltage_check_time++;
 133   1          }
 134   1          if (Voltage_add == 0)  
 135   1          {
 136   1            LED1 = 0;            //充电故障则持续亮灯
 137   1          }
 138   1          if (Voltage[0] >= 7.5)    //充电完成后熄灯  退出初始化
 139   1          {
 140   1            System_OK = 1;
 141   1            LED1 = 1;     
 142   1          }
 143   1        }
 144   1        */
 145   1      }
 146          
 147          /**** 读拨码开关的值 ****/
 148          void Read_Switch() 
 149          {
 150   1        K1 = P3_2;
 151   1        K2 = P3_3;
 152   1        //K3 = P3_4;
 153   1        //K4 = P3_5;
 154   1        if(K1==0)  //拨码开关1功能
 155   1        {
 156   2          //OLED_Draw_UI();//屏
 157   2          //Check_BottonPress();//按键
 158   2        }
 159   1        if(K2==0)   //拨码开关2功能
 160   1        {
 161   2          
 162   2        }
 163   1        if(K3==0)  //拨码开关4功能
 164   1        {
 165   2           
 166   2        }
 167   1        if(K4==0)  //拨码开关4功能
 168   1        {
 169   2           
 170   2        }
 171   1      } 


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    832    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     54       4
C51 COMPILER V9.01   SYSTEM_INIT                                                           07/15/2020 14:47:17 PAGE 4   

   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
