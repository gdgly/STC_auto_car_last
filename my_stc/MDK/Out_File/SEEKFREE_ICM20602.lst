C51 COMPILER V9.01   SEEKFREE_ICM20602                                                     07/03/2020 15:17:24 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE SEEKFREE_ICM20602
OBJECT MODULE PLACED IN .\Out_File\SEEKFREE_ICM20602.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\..\Libraries\seekfree_peripheral\SEEKFREE_ICM20602.c LARGE OPTIMIZE(8
                    -,SPEED) BROWSE INCDIR(..\..\Libraries\libraries;..\..\Libraries\seekfree_libraries;..\..\Libraries\seekfree_peripheral;.
                    -.\USER\inc;..\USER\src;..\CODE) DEBUG OBJECTEXTEND PRINT(.\Out_File\SEEKFREE_ICM20602.lst) TABS(2) OBJECT(.\Out_File\SEE
                    -KFREE_ICM20602.obj)

line level    source

   1          /*********************************************************************************************************
             -************
   2           * COPYRIGHT NOTICE
   3           * Copyright (c) 2018,逐飞科技
   4           * All rights reserved.
   5           * 技术讨论QQ群：一群：179029047(已满)  二群：244861897
   6           *
   7           * 以下所有内容版权均属逐飞科技所有，未经允许不得用于商业用途，
   8           * 欢迎各位使用并传播本程序，修改内容时必须保留逐飞科技的版权声明。
   9           *
  10           * @file          ICM20602
  11           * @company       成都逐飞科技有限公司
  12           * @author        逐飞科技(QQ3184284598)
  13           * @version       查看doc内version文件 版本说明
  14           * @Software    IAR 8.3 or MDK 5.24
  15           * @Taobao      https://seekfree.taobao.com/
  16           * @date          2019-04-30
  17           * @note    
  18                    接线定义：
  19                    ------------------------------------ 
  20                      模块管脚            单片机管脚
  21                      SPC                 查看SEEKFREE_ICM20602.c文件中的ICM20602_SPI_SCLK_PIN 宏定义
  22                      SDI                 查看SEEKFREE_ICM20602.c文件中的ICM20602_SPI_MOSI_PIN 宏定义
  23                      SDO                 查看SEEKFREE_ICM20602.c文件中的ICM20602_SPI_MISO_PIN 宏定义
  24                      CS                  查看SEEKFREE_ICM20602.c文件中的ICM20602_SPI_CS_PIN   宏定义
  25                    ------------------------------------ 
  26           *********************************************************************************************************
             -***********/
  27          
  28          
  29          
  30          #include "SEEKFREE_ICM20602.h"
  31          #include "SEEKFREE_IIC.h"
  32          #include "zf_pca_delay.h"
  33          #include "zf_spi.h"
  34          
  35          
  36          int16 icm_gyro_x,icm_gyro_y,icm_gyro_z;
  37          int16 icm_acc_x,icm_acc_y,icm_acc_z;
  38          
  39          
  40          
  41          //--------------------------------------------------------------------------------------------------------
             ------------
  42          //  以下函数是使用软件IIC通信，相比较硬件IIC，软件IIC引脚更加灵活，可以使用任意普通IO
  43          //--------------------------------------------------------------------------------------------------------
             ------------
  44          //--------------------------------------------------------------------------------------------------------
             ------------
  45          //  @brief      ICM20602自检函数
  46          //  @param      NULL
  47          //  @return     void
C51 COMPILER V9.01   SEEKFREE_ICM20602                                                     07/03/2020 15:17:24 PAGE 2   

  48          //  @since      v1.0
  49          //  Sample usage:       调用该函数前，请先调用模拟IIC的初始化
  50          //--------------------------------------------------------------------------------------------------------
             ------------
  51          void icm20602_self1_check(void)
  52          {
  53   1          uint8 dat=0;
  54   1          while(0x12 != dat)   //读取ICM20602 ID
  55   1          {
  56   2              dat = simiic_read_reg(ICM20602_DEV_ADDR,ICM20602_WHO_AM_I,SIMIIC);
  57   2              pca_delay_ms(10);
  58   2              //卡在这里原因有以下几点
  59   2              //1 MPU6050坏了，如果是新的这样的概率极低
  60   2              //2 接线错误或者没有接好
  61   2              //3 可能你需要外接上拉电阻，上拉到3.3V
  62   2          }
  63   1      }
  64          
  65          
  66          
  67          //--------------------------------------------------------------------------------------------------------
             ------------
  68          //  @brief      软件IIC，初始化ICM20602
  69          //  @param      NULL
  70          //  @return     void
  71          //  @since      v1.0
  72          //  Sample usage:       调用该函数前，请先调用模拟IIC的初始化
  73          //--------------------------------------------------------------------------------------------------------
             ------------
  74          void icm20602_init_simiic(void)
  75          {
  76   1          pca_delay_ms(10);  //上电延时
  77   1      
  78   1          //检测
  79   1          icm20602_self1_check();
  80   1      
  81   1          //复位
  82   1          simiic_write_reg(ICM20602_DEV_ADDR,ICM20602_PWR_MGMT_1,0x80);               //复位设备
  83   1          pca_delay_ms(2);                                                        //延时
  84   1          while(0x80 & simiic_read_reg(ICM20602_DEV_ADDR,ICM20602_PWR_MGMT_1,SIMIIC));//等待复位完成
  85   1      
  86   1          //配置参数
  87   1          simiic_write_reg(ICM20602_DEV_ADDR,ICM20602_PWR_MGMT_1,0x01);               //时钟设置
  88   1          simiic_write_reg(ICM20602_DEV_ADDR,ICM20602_PWR_MGMT_2,0x00);               //开启陀螺仪和加速度计
  89   1          simiic_write_reg(ICM20602_DEV_ADDR,ICM20602_CONFIG,0x01);                   //176HZ 1KHZ
  90   1          simiic_write_reg(ICM20602_DEV_ADDR,ICM20602_SMPLRT_DIV,0x07);               //采样速率 SAMPLE_RATE = I
             -NTERNAL_SAMPLE_RATE / (1 + SMPLRT_DIV)
  91   1          simiic_write_reg(ICM20602_DEV_ADDR,ICM20602_GYRO_CONFIG,0x18);              //±2000 dps
  92   1          simiic_write_reg(ICM20602_DEV_ADDR,ICM20602_ACCEL_CONFIG,0x10);             //±8g
  93   1          simiic_write_reg(ICM20602_DEV_ADDR,ICM20602_ACCEL_CONFIG_2,0x03);           //Average 4 samples   44.8
             -HZ   //0x23 Average 16 samples
  94   1      }
  95          
  96          
  97          //--------------------------------------------------------------------------------------------------------
             ------------
  98          //  @brief      获取ICM20602加速度计数据
  99          //  @param      NULL
 100          //  @return     void
 101          //  @since      v1.0
 102          //  Sample usage:       执行该函数后，直接查看对应的变量即可
 103          //--------------------------------------------------------------------------------------------------------
C51 COMPILER V9.01   SEEKFREE_ICM20602                                                     07/03/2020 15:17:24 PAGE 3   

             ------------
 104          void get_icm20602_accdata_simiic(void)
 105          {
 106   1          uint8 dat[6];
 107   1      
 108   1          simiic_read_regs(ICM20602_DEV_ADDR, ICM20602_ACCEL_XOUT_H, dat, 6, SIMIIC);
 109   1          icm_acc_x = (int16)(((uint16)dat[0]<<8 | dat[1]));
 110   1          icm_acc_y = (int16)(((uint16)dat[2]<<8 | dat[3]));
 111   1          icm_acc_z = (int16)(((uint16)dat[4]<<8 | dat[5]));
 112   1      }
 113          
 114          //--------------------------------------------------------------------------------------------------------
             ------------
 115          //  @brief      获取ICM20602陀螺仪数据
 116          //  @param      NULL
 117          //  @return     void
 118          //  @since      v1.0
 119          //  Sample usage:       执行该函数后，直接查看对应的变量即可
 120          //--------------------------------------------------------------------------------------------------------
             ------------
 121          void get_icm20602_gyro_simiic(void)
 122          {
 123   1          uint8 dat[6];
 124   1      
 125   1          simiic_read_regs(ICM20602_DEV_ADDR, ICM20602_GYRO_XOUT_H, dat, 6, SIMIIC);
 126   1          icm_gyro_x = (int16)(((uint16)dat[0]<<8 | dat[1]));
 127   1          icm_gyro_y = (int16)(((uint16)dat[2]<<8 | dat[3]));
 128   1          icm_gyro_z = (int16)(((uint16)dat[4]<<8 | dat[5]));
 129   1      }
 130          
 131          
 132          
 133          
 134          
 135          
 136          
 137          //--------------------------------------------------------------------------------------------------------
             ------------
 138          //  以下函数是使用软件SPI通信，相比较硬件SPI，软件SPI引脚更加灵活，可以使用任意普通IO
 139          //--------------------------------------------------------------------------------------------------------
             ------------
 140          
 141          
 142          
 143          
 144          
 145          //--------------------------------------------------------------------------------------------------------
             ------------
 146          //  @brief      通过SPI写一个byte,同时读取一个byte
 147          //  @param      byte        发送的数据    
 148          //  @return     uint8       return 返回status状态
 149          //  @since      v1.0
 150          //  Sample usage:
 151          //--------------------------------------------------------------------------------------------------------
             ------------
 152          uint8 icm_simspi_wr_byte(uint8 byte)
 153          {
 154   1          uint8 i;
 155   1        
 156   1          for(i=0; i<8; i++)
 157   1          {
 158   2              ICM20602_MOSI(byte&0x80);
C51 COMPILER V9.01   SEEKFREE_ICM20602                                                     07/03/2020 15:17:24 PAGE 4   

 159   2              byte <<= 1;
 160   2          ICM20602_SCK (0);
 161   2          
 162   2              ICM20602_SCK (1);
 163   2          byte |= ICM20602_MISO; 
 164   2          } 
 165   1          return(byte);                                         
 166   1      }
 167          
 168          //--------------------------------------------------------------------------------------------------------
             ------------
 169          //  @brief      将val写入cmd对应的寄存器地址,同时返回status字节
 170          //  @param      cmd         命令字
 171          //  @param      val         待写入寄存器的数值
 172          //  @since      v1.0
 173          //  Sample usage:
 174          //--------------------------------------------------------------------------------------------------------
             ------------
 175          void icm_simspi_w_reg_byte(uint8 cmd, uint8 val)
 176          {
 177   1          ICM20602_CSN (0);
 178   1          cmd |= ICM20602_SPI_W;
 179   1          icm_simspi_wr_byte(cmd);                        
 180   1          icm_simspi_wr_byte(val);                                
 181   1          ICM20602_CSN (1);                                     
 182   1      }
 183          
 184          //--------------------------------------------------------------------------------------------------------
             ------------
 185          //  @brief      读取cmd所对应的寄存器地址
 186          //  @param      cmd         命令字
 187          //  @param      *val        存储读取的数据地址
 188          //  @since      v1.0
 189          //  Sample usage:
 190          //--------------------------------------------------------------------------------------------------------
             ------------
 191          void icm_simspi_r_reg_byte(uint8 cmd, uint8 *val)
 192          {
 193   1          ICM20602_CSN (0);
 194   1          cmd |= ICM20602_SPI_R;
 195   1          icm_simspi_wr_byte(cmd);                                
 196   1          *val = icm_simspi_wr_byte(0);                             
 197   1          ICM20602_CSN (1);                                     
 198   1      }
 199          
 200          //--------------------------------------------------------------------------------------------------------
             ------------
 201          //  @brief      读取cmd所对应的寄存器地址
 202          //  @param      cmd         命令字
 203          //  @param      *val        存储读取的数据地址
 204          //  @param      num         读取的数量
 205          //  @since      v1.0
 206          //  Sample usage:
 207          //--------------------------------------------------------------------------------------------------------
             ------------
 208          void icm_simspi_r_reg_bytes(uint8 cmd, uint8 *val, uint8 num)
 209          {
 210   1          uint16 i;
 211   1          ICM20602_CSN (0);
 212   1          cmd |= ICM20602_SPI_R;
 213   1          icm_simspi_wr_byte(cmd);                                    
 214   1          for(i=0; i<num; i++)  
C51 COMPILER V9.01   SEEKFREE_ICM20602                                                     07/03/2020 15:17:24 PAGE 5   

 215   1              val[i] = icm_simspi_wr_byte(0);                       
 216   1          ICM20602_CSN (1);                                       
 217   1      }
 218          
 219          
 220          //--------------------------------------------------------------------------------------------------------
             ------------
 221          //  @brief      ICM20602自检函数
 222          //  @param      NULL
 223          //  @return     void          
 224          //  @since      v1.0
 225          //  Sample usage:       
 226          //--------------------------------------------------------------------------------------------------------
             ------------
 227          void icm20602_self4_check(void)
 228          {
 229   1          uint8 val;
 230   1          do
 231   1          {
 232   2              icm_simspi_r_reg_byte(ICM20602_WHO_AM_I,&val);
 233   2          
 234   2              //卡在这里原因有以下几点
 235   2              //1 MPU6050坏了，如果是新的这样的概率极低
 236   2              //2 接线错误或者没有接好
 237   2              //3 可能你需要外接上拉电阻，上拉到3.3V
 238   2          }while(0x12 != val);
 239   1      }
 240          
 241          
 242          //--------------------------------------------------------------------------------------------------------
             ------------
 243          //  @brief      软件SPI，初始化ICM20602
 244          //  @param      NULL
 245          //  @return     void          
 246          //  @since      v1.0
 247          //  Sample usage:       
 248          //--------------------------------------------------------------------------------------------------------
             ------------
 249          void icm20602_init_simspi(void)
 250          {
 251   1          uint8 val;
 252   1      
 253   1          icm20602_self4_check();//检测
 254   1          
 255   1          icm_simspi_w_reg_byte(ICM20602_PWR_MGMT_1,0x80);//复位设备
 256   1          pca_delay_ms(2);
 257   1          do
 258   1          {//等待复位成功
 259   2              icm_simspi_r_reg_byte(ICM20602_PWR_MGMT_1,&val);
 260   2          }while(0x41 != val);
 261   1          
 262   1          icm_simspi_w_reg_byte(ICM20602_PWR_MGMT_1,     0x01);            //时钟设置
 263   1          icm_simspi_w_reg_byte(ICM20602_PWR_MGMT_2,     0x00);            //开启陀螺仪和加速度计
 264   1          icm_simspi_w_reg_byte(ICM20602_CONFIG,         0x01);            //176HZ 1KHZ
 265   1          icm_simspi_w_reg_byte(ICM20602_SMPLRT_DIV,     0x07);            //采样速率 SAMPLE_RATE = INTERNAL_SAM
             -PLE_RATE / (1 + SMPLRT_DIV)
 266   1          icm_simspi_w_reg_byte(ICM20602_GYRO_CONFIG,    0x18);            //±2000 dps
 267   1          icm_simspi_w_reg_byte(ICM20602_ACCEL_CONFIG,   0x10);            //±8g
 268   1          icm_simspi_w_reg_byte(ICM20602_ACCEL_CONFIG_2, 0x03);            //Average 8 samples   44.8HZ
 269   1          
 270   1      }
 271          
C51 COMPILER V9.01   SEEKFREE_ICM20602                                                     07/03/2020 15:17:24 PAGE 6   

 272          
 273          //--------------------------------------------------------------------------------------------------------
             ------------
 274          //  @brief      获取ICM20602加速度计数据
 275          //  @param      NULL
 276          //  @return     void
 277          //  @since      v1.0
 278          //  Sample usage:       执行该函数后，直接查看对应的变量即可
 279          //--------------------------------------------------------------------------------------------------------
             ------------
 280          void get_icm20602_accdata_simspi(void)
 281          {
 282   1          uint8 dat[6];
 283   1      
 284   1          
 285   1          icm_simspi_r_reg_bytes(ICM20602_ACCEL_XOUT_H, dat, 6);
 286   1          icm_acc_x = (int16)(((uint16)dat[0]<<8 | dat[1]));
 287   1          icm_acc_y = (int16)(((uint16)dat[2]<<8 | dat[3]));
 288   1          icm_acc_z = (int16)(((uint16)dat[4]<<8 | dat[5]));
 289   1      }
 290          
 291          //--------------------------------------------------------------------------------------------------------
             ------------
 292          //  @brief      获取ICM20602陀螺仪数据
 293          //  @param      NULL
 294          //  @return     void
 295          //  @since      v1.0
 296          //  Sample usage:       执行该函数后，直接查看对应的变量即可
 297          //--------------------------------------------------------------------------------------------------------
             ------------
 298          void get_icm20602_gyro_simspi(void)
 299          {
 300   1          uint8 dat[6];
 301   1          
 302   1          icm_simspi_r_reg_bytes(ICM20602_GYRO_XOUT_H, dat, 6);
 303   1          icm_gyro_x = (int16)(((uint16)dat[0]<<8 | dat[1]));
 304   1          icm_gyro_y = (int16)(((uint16)dat[2]<<8 | dat[3]));
 305   1          icm_gyro_z = (int16)(((uint16)dat[4]<<8 | dat[5]));
 306   1      }
 307          
 308          
 309          
 310          
 311          
 312          
 313          
 314          
 315          
 316          //--------------------------------------------------------------------------------------------------------
             ------------
 317          //  以下函数是使用硬件SPI通信，相比较IIC，速度比IIC快非常多。
 318          //--------------------------------------------------------------------------------------------------------
             ------------
 319          
 320          
 321          
 322          
 323          
 324          //--------------------------------------------------------------------------------------------------------
             ------------
 325          //  @brief      通过SPI写一个byte,同时读取一个byte
 326          //  @param      byte        发送的数据    
C51 COMPILER V9.01   SEEKFREE_ICM20602                                                     07/03/2020 15:17:24 PAGE 7   

 327          //  @return     uint8       return 返回status状态
 328          //  @since      v1.0
 329          //  Sample usage:
 330          //--------------------------------------------------------------------------------------------------------
             ------------
 331          uint8 icm_spi_wr_byte(uint8 byte)
 332          {
 333   1        byte = spi_mosi(byte);
 334   1          return byte;                                
 335   1      }
 336          
 337          
 338          //--------------------------------------------------------------------------------------------------------
             ------------
 339          //  @brief      ICM20602 SPI写寄存器
 340          //  @param      cmd     寄存器地址
 341          //  @param      val     需要写入的数据
 342          //  @return     void          
 343          //  @since      v1.0
 344          //  Sample usage:       
 345          //--------------------------------------------------------------------------------------------------------
             ------------
 346          void icm_spi_w_reg_byte(uint8 cmd, uint8 val)
 347          {
 348   1        ICM20602_CS(0);
 349   1        
 350   1          cmd |= ICM20602_SPI_W;
 351   1        icm_spi_wr_byte(cmd);//写命令
 352   1        icm_spi_wr_byte(val);//写数据
 353   1        
 354   1        ICM20602_CS(1);
 355   1      }
 356          
 357          //--------------------------------------------------------------------------------------------------------
             ------------
 358          //  @brief      ICM20602 SPI读寄存器
 359          //  @param      cmd     寄存器地址
 360          //  @param      *val    接收数据的地址
 361          //  @return     void          
 362          //  @since      v1.0
 363          //  Sample usage:       
 364          //--------------------------------------------------------------------------------------------------------
             ------------
 365          
 366          void icm_spi_r_reg_byte(uint8 cmd, uint8 *val)
 367          {
 368   1        ICM20602_CS(0);
 369   1          cmd |= ICM20602_SPI_R;
 370   1        
 371   1        icm_spi_wr_byte(cmd);   //写命令
 372   1        *val = icm_spi_wr_byte(0);  //读数据
 373   1        
 374   1        ICM20602_CS(1);
 375   1      }
 376            
 377          //--------------------------------------------------------------------------------------------------------
             ------------
 378          //  @brief      ICM20602 SPI多字节读寄存器
 379          //  @param      cmd     寄存器地址
 380          //  @param      *val    接收数据的地址
 381          //  @param      num     读取数量
 382          //  @return     void          
C51 COMPILER V9.01   SEEKFREE_ICM20602                                                     07/03/2020 15:17:24 PAGE 8   

 383          //  @since      v1.0
 384          //  Sample usage:       
 385          //--------------------------------------------------------------------------------------------------------
             ------------
 386          void icm_spi_r_reg_bytes(uint8 cmd,uint8 *val, uint8 num)
 387          {
 388   1          uint16 i;
 389   1        ICM20602_CS(0);
 390   1        
 391   1        cmd |= ICM20602_SPI_R;
 392   1        icm_spi_wr_byte(cmd); //写命令
 393   1        
 394   1        for(i=0; i<num; i++)  
 395   1              val[i] = icm_spi_wr_byte(0);
 396   1        
 397   1        ICM20602_CS(1);
 398   1      }
 399          
 400          
 401          //--------------------------------------------------------------------------------------------------------
             ------------
 402          //  @brief      ICM20602自检函数
 403          //  @param      NULL
 404          //  @return     void          
 405          //  @since      v1.0
 406          //  Sample usage:       
 407          //--------------------------------------------------------------------------------------------------------
             ------------
 408          void icm20602_self3_check(void)
 409          {
 410   1          uint8 dat=0;
 411   1          while(0x12 != dat)   //读取ICM20602 ID
 412   1          {
 413   2              icm_spi_r_reg_byte(ICM20602_WHO_AM_I,&dat);
 414   2      
 415   2              pca_delay_ms(10);
 416   2              //卡在这里原因有以下几点
 417   2              //1 MPU6050坏了，如果是新的这样的概率极低
 418   2              //2 接线错误或者没有接好
 419   2              //3 可能你需要外接上拉电阻，上拉到3.3V
 420   2          }
 421   1      
 422   1      }
 423               
 424          //--------------------------------------------------------------------------------------------------------
             ------------
 425          //  @brief      初始化ICM20602
 426          //  @param      NULL
 427          //  @return     void          
 428          //  @since      v1.0
 429          //  Sample usage:       
 430          //--------------------------------------------------------------------------------------------------------
             ------------
 431          void icm20602_init_spi(void)
 432          {
 433   1          uint8 val = 0x0;
 434   1      
 435   1          pca_delay_ms(10);  //上电延时
 436   1        
 437   1        
 438   1          spi_init(ICM20602_SPI_N, ICM20602_SPI_SCLK_PIN, ICM20602_SPI_MOSI_PIN, ICM20602_SPI_MISO_PIN, 0, MASTE
             -R, SPI_SYSclk_DIV_4);
C51 COMPILER V9.01   SEEKFREE_ICM20602                                                     07/03/2020 15:17:24 PAGE 9   

 439   1      
 440   1          icm20602_self3_check();//检测
 441   1          
 442   1          icm_spi_w_reg_byte(ICM20602_PWR_MGMT_1,0x80);//复位设备
 443   1          pca_delay_ms(2);
 444   1        
 445   1          do
 446   1          {//等待复位成功
 447   2              icm_spi_r_reg_byte(ICM20602_PWR_MGMT_1,&val);
 448   2          }while(0x41 != val);
 449   1          
 450   1          icm_spi_w_reg_byte(ICM20602_PWR_MGMT_1,     0x01);            //时钟设置
 451   1          icm_spi_w_reg_byte(ICM20602_PWR_MGMT_2,     0x00);            //开启陀螺仪和加速度计
 452   1          icm_spi_w_reg_byte(ICM20602_CONFIG,         0x01);            //176HZ 1KHZ
 453   1          icm_spi_w_reg_byte(ICM20602_SMPLRT_DIV,     0x07);            //采样速率 SAMPLE_RATE = INTERNAL_SAMPLE
             -_RATE / (1 + SMPLRT_DIV)
 454   1          icm_spi_w_reg_byte(ICM20602_GYRO_CONFIG,    0x18);            //±2000 dps
 455   1          icm_spi_w_reg_byte(ICM20602_ACCEL_CONFIG,   0x10);            //±8g
 456   1          icm_spi_w_reg_byte(ICM20602_ACCEL_CONFIG_2, 0x03);            //Average 4 samples   44.8HZ   //0x23 Av
             -erage 16 samples
 457   1      }
 458          
 459          //--------------------------------------------------------------------------------------------------------
             ------------
 460          //  @brief      获取ICM20602加速度计数据
 461          //  @param      NULL
 462          //  @return     void
 463          //  @since      v1.0
 464          //  Sample usage:       执行该函数后，直接查看对应的变量即可
 465          //--------------------------------------------------------------------------------------------------------
             ------------
 466          void get_icm20602_accdata_spi(void)
 467          {
 468   1        uint8 dat[6];
 469   1        
 470   1        icm_spi_r_reg_bytes(ICM20602_ACCEL_XOUT_H, dat, 6);
 471   1        icm_acc_x = (int16)(((uint16)dat[0]<<8 | dat[1]));
 472   1        icm_acc_y = (int16)(((uint16)dat[2]<<8 | dat[3]));
 473   1        icm_acc_z = (int16)(((uint16)dat[4]<<8 | dat[5]));
 474   1      }
 475          
 476          //--------------------------------------------------------------------------------------------------------
             ------------
 477          //  @brief      获取ICM20602陀螺仪数据
 478          //  @param      NULL
 479          //  @return     void
 480          //  @since      v1.0
 481          //  Sample usage:       执行该函数后，直接查看对应的变量即可
 482          //--------------------------------------------------------------------------------------------------------
             ------------
 483          void get_icm20602_gyro_spi(void)
 484          {
 485   1          uint8 dat[6];
 486   1          
 487   1          icm_spi_r_reg_bytes(ICM20602_GYRO_XOUT_H, dat, 6);
 488   1          icm_gyro_x = (int16)(((uint16)dat[0]<<8 | dat[1]));
 489   1          icm_gyro_y = (int16)(((uint16)dat[2]<<8 | dat[3]));
 490   1          icm_gyro_z = (int16)(((uint16)dat[4]<<8 | dat[5]));
 491   1      }
 492          
 493          
 494          
C51 COMPILER V9.01   SEEKFREE_ICM20602                                                     07/03/2020 15:17:24 PAGE 10  

 495          
 496          
 497          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1107    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     12      57
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
