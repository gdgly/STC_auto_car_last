C51 COMPILER V9.01   SEEKFREE_IPS114_SPI                                                   07/03/2020 15:17:25 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE SEEKFREE_IPS114_SPI
OBJECT MODULE PLACED IN .\Out_File\SEEKFREE_IPS114_SPI.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\..\Libraries\seekfree_peripheral\SEEKFREE_IPS114_SPI.c LARGE OPTIMIZE
                    -(8,SPEED) BROWSE INCDIR(..\..\Libraries\libraries;..\..\Libraries\seekfree_libraries;..\..\Libraries\seekfree_peripheral
                    -;..\USER\inc;..\USER\src;..\CODE) DEBUG OBJECTEXTEND PRINT(.\Out_File\SEEKFREE_IPS114_SPI.lst) TABS(2) OBJECT(.\Out_File
                    -\SEEKFREE_IPS114_SPI.obj)

line level    source

   1          /*********************************************************************************************************
             -************
   2           * COPYRIGHT NOTICE
   3           * Copyright (c) 2018,逐飞科技
   4           * All rights reserved.
   5           * 技术讨论QQ群：一群：179029047(已满)  二群：244861897(已满)  三群：824575535
   6           *
   7           * 以下所有内容版权均属逐飞科技所有，未经允许不得用于商业用途，
   8           * 欢迎各位使用并传播本程序，修改内容时必须保留逐飞科技的版权声明。
   9           *
  10           * @file          main
  11           * @company       成都逐飞科技有限公司
  12           * @author        逐飞科技(QQ3184284598)
  13           * @version       查看doc内version文件 版本说明
  14           * @Software    IAR 8.3 or MDK 5.24
  15           * @Taobao      https://seekfree.taobao.com/
  16           * @date          2019-11-15
  17           * @note    
  18                    接线定义：
  19                    ------------------------------------ 
  20                    1.14寸IPS模块管脚       单片机管脚
  21                    SCL                   查看SEEKFREE_IPS114_SPI.h文件内的IPS114_SCL   宏定义     硬件SPI引脚不可随意切换
  22                    SDA                   查看SEEKFREE_IPS114_SPI.h文件内的IPS114_SDA   宏定义     硬件SPI引脚不可随意切换
  23                    RES                   查看SEEKFREE_IPS114_SPI.h文件内的IPS114_REST_PIN宏定义    
  24                    DC                    查看SEEKFREE_IPS114_SPI.h文件内的IPS114_DC_PIN  宏定义  
  25                    CS                    查看SEEKFREE_IPS114_SPI.h文件内的IPS114_CS    宏定义     
  26                    BL            查看SEEKFREE_IPS114_SPI.h文件内的IPS114_BL_PIN  宏定义
  27                    
  28                    电源引脚
  29                    VCC 3.3V电源
  30                    GND 电源地
  31                    最大分辨率135*240
  32                    ------------------------------------ 
  33           *********************************************************************************************************
             -***********/
  34           
  35          
  36          
  37          
  38          #include "SEEKFREE_IPS114_SPI.h"
  39          #include "SEEKFREE_FONT.h"
  40          #include "SEEKFREE_PRINTF.h"
  41          #include "zf_spi.h"
  42          #include "zf_pca_delay.h"
  43          
  44          
  45          
  46          
  47          //--------------------------------------------------------------------------------------------------------
             ------------
  48          //  @brief      内部调用，用户无需关心
  49          //  @param      void        
C51 COMPILER V9.01   SEEKFREE_IPS114_SPI                                                   07/03/2020 15:17:25 PAGE 2   

  50          //  @return             
  51          //  @since      v1.0
  52          //  Sample usage:               
  53          //--------------------------------------------------------------------------------------------------------
             ------------
  54          void ips114_writeIndex(uint8 dat)     //写命令
  55          { 
  56   1        IPS114_CS(0);
  57   1          IPS114_DC(0);
  58   1      
  59   1        spi_mosi(dat);
  60   1        IPS114_CS(1);
  61   1      }
  62          
  63          //--------------------------------------------------------------------------------------------------------
             ------------
  64          //  @brief      内部调用，用户无需关心
  65          //  @param      void        
  66          //  @return             
  67          //  @since      v1.0
  68          //  Sample usage:               
  69          //--------------------------------------------------------------------------------------------------------
             ------------
  70          void ips114_writeData(uint8 dat)      //写数据
  71          {
  72   1        IPS114_CS(0);
  73   1          IPS114_DC(1);
  74   1      
  75   1        spi_mosi(dat);
  76   1        IPS114_CS(1);
  77   1      }
  78          
  79          //--------------------------------------------------------------------------------------------------------
             ------------
  80          //  @brief      内部调用，用户无需关心
  81          //  @param      void        
  82          //  @return             
  83          //  @since      v1.0
  84          //  Sample usage:               
  85          //--------------------------------------------------------------------------------------------------------
             ------------
  86          void ips114_writedata_16bit(uint16 dat) //向液晶屏写一个16位数据
  87          {
  88   1          uint8 dat1[2];
  89   1          dat1[0] = dat >> 8;
  90   1          dat1[1] = (uint8)dat;
  91   1        IPS114_CS(0);
  92   1          IPS114_DC(1);
  93   1        spi_mosi(dat1[0]);  //写入数据  高位在前  低位在后
  94   1        spi_mosi(dat1[1]);
  95   1        IPS114_CS(1);
  96   1      }
  97          
  98          //--------------------------------------------------------------------------------------------------------
             ------------
  99          //  @brief      1.14寸 IPS液晶初始化
 100          //  @return     void
 101          //  @since      v1.0
 102          //  Sample usage:               
 103          //--------------------------------------------------------------------------------------------------------
             ------------
 104          void ips114_init(void)
C51 COMPILER V9.01   SEEKFREE_IPS114_SPI                                                   07/03/2020 15:17:25 PAGE 3   

 105          {
 106   1          spi_init(IPS114_SPIN_PIN, IPS114_SCL_PIN, IPS114_SDA_PIN, IPS114_SDA_IN_PIN, 0, MASTER, SPI_SYSclk_DIV
             -_4);
 107   1      
 108   1        IPS114_BL(1);
 109   1        IPS114_DC(0);
 110   1        IPS114_REST(0);
 111   1        
 112   1          pca_delay_ms(200);
 113   1          
 114   1          IPS114_REST(1);
 115   1          pca_delay_ms(100);
 116   1        
 117   1          ips114_writeIndex(0x36);
 118   1          
 119   1          if      (IPS114_DISPLAY_DIR==0)    ips114_writeData(0x00);
 120   1          else if (IPS114_DISPLAY_DIR==1)    ips114_writeData(0xC0);
 121   1          else if (IPS114_DISPLAY_DIR==2)    ips114_writeData(0x70);
 122   1          else                            ips114_writeData(0xA0);
 123   1          
 124   1          ips114_writeIndex(0x3A); 
 125   1          ips114_writeData(0x05);
 126   1      
 127   1          ips114_writeIndex(0xB2);
 128   1          ips114_writeData(0x0C);
 129   1          ips114_writeData(0x0C);
 130   1          ips114_writeData(0x00);
 131   1          ips114_writeData(0x33);
 132   1          ips114_writeData(0x33); 
 133   1      
 134   1          ips114_writeIndex(0xB7); 
 135   1          ips114_writeData(0x35);  
 136   1      
 137   1          ips114_writeIndex(0xBB);
 138   1          ips114_writeData(0x37);
 139   1      
 140   1          ips114_writeIndex(0xC0);
 141   1          ips114_writeData(0x2C);
 142   1      
 143   1          ips114_writeIndex(0xC2);
 144   1          ips114_writeData(0x01);
 145   1      
 146   1          ips114_writeIndex(0xC3);
 147   1          ips114_writeData(0x12);   
 148   1      
 149   1          ips114_writeIndex(0xC4);
 150   1          ips114_writeData(0x20);  
 151   1      
 152   1          ips114_writeIndex(0xC6); 
 153   1          ips114_writeData(0x0F);    
 154   1      
 155   1          ips114_writeIndex(0xD0); 
 156   1          ips114_writeData(0xA4);
 157   1          ips114_writeData(0xA1);
 158   1      
 159   1          ips114_writeIndex(0xE0);
 160   1          ips114_writeData(0xD0);
 161   1          ips114_writeData(0x04);
 162   1          ips114_writeData(0x0D);
 163   1          ips114_writeData(0x11);
 164   1          ips114_writeData(0x13);
 165   1          ips114_writeData(0x2B);
C51 COMPILER V9.01   SEEKFREE_IPS114_SPI                                                   07/03/2020 15:17:25 PAGE 4   

 166   1          ips114_writeData(0x3F);
 167   1          ips114_writeData(0x54);
 168   1          ips114_writeData(0x4C);
 169   1          ips114_writeData(0x18);
 170   1          ips114_writeData(0x0D);
 171   1          ips114_writeData(0x0B);
 172   1          ips114_writeData(0x1F);
 173   1          ips114_writeData(0x23);
 174   1      
 175   1          ips114_writeIndex(0xE1);
 176   1          ips114_writeData(0xD0);
 177   1          ips114_writeData(0x04);
 178   1          ips114_writeData(0x0C);
 179   1          ips114_writeData(0x11);
 180   1          ips114_writeData(0x13);
 181   1          ips114_writeData(0x2C);
 182   1          ips114_writeData(0x3F);
 183   1          ips114_writeData(0x44);
 184   1          ips114_writeData(0x51);
 185   1          ips114_writeData(0x2F);
 186   1          ips114_writeData(0x1F);
 187   1          ips114_writeData(0x1F);
 188   1          ips114_writeData(0x20);
 189   1          ips114_writeData(0x23);
 190   1      
 191   1          ips114_writeIndex(0x21); 
 192   1      
 193   1          ips114_writeIndex(0x11); 
 194   1          pca_delay_ms(120); 
 195   1      
 196   1          ips114_writeIndex(0x29);
 197   1          ips114_clear(IPS114_BGCOLOR);
 198   1      }
 199          
 200          
 201          
 202          void ips114_set_region(uint16 x1,uint16 y1,uint16 x2,uint16 y2)
 203          {
 204   1        #if(IPS114_DISPLAY_DIR==0)
                {
                  ips114_writeIndex(0x2a);//列地址设置
                  ips114_writedata_16bit(x1+52);
                  ips114_writedata_16bit(x2+52);
                  ips114_writeIndex(0x2b);//行地址设置
                  ips114_writedata_16bit(y1+40);
                  ips114_writedata_16bit(y2+40);
                  ips114_writeIndex(0x2c);//储存器写
                }
                #elif(IPS114_DISPLAY_DIR==1)
                {
                  ips114_writeIndex(0x2a);//列地址设置
                  ips114_writedata_16bit(x1+53);
                  ips114_writedata_16bit(x2+53);
                  ips114_writeIndex(0x2b);//行地址设置
                  ips114_writedata_16bit(y1+40);
                  ips114_writedata_16bit(y2+40);
                  ips114_writeIndex(0x2c);//储存器写
                }
                #elif(IPS114_DISPLAY_DIR==2)
                {
                  ips114_writeIndex(0x2a);//列地址设置
                  ips114_writedata_16bit(x1+40);
C51 COMPILER V9.01   SEEKFREE_IPS114_SPI                                                   07/03/2020 15:17:25 PAGE 5   

                  ips114_writedata_16bit(x2+40);
                  ips114_writeIndex(0x2b);//行地址设置
                  ips114_writedata_16bit(y1+53);
                  ips114_writedata_16bit(y2+53);
                  ips114_writeIndex(0x2c);//储存器写
                }
                #else
 235   1        {
 236   2          ips114_writeIndex(0x2a);//列地址设置
 237   2          ips114_writedata_16bit(x1+40);
 238   2          ips114_writedata_16bit(x2+40);
 239   2          ips114_writeIndex(0x2b);//行地址设置
 240   2          ips114_writedata_16bit(y1+52);
 241   2          ips114_writedata_16bit(y2+52);
 242   2          ips114_writeIndex(0x2c);//储存器写
 243   2        }
 244   1        #endif
 245   1      }
 246          
 247          //--------------------------------------------------------------------------------------------------------
             ------------
 248          //  @brief      液晶清屏函数
 249          //  @param      color         颜色设置
 250          //  @return     void
 251          //  @since      v1.0
 252          //  Sample usage:               ips114_clear(YELLOW);// 全屏设置为黄色
 253          //--------------------------------------------------------------------------------------------------------
             ------------
 254          void ips114_clear(uint16 color)
 255          {
 256   1          uint16 i,j;
 257   1        ips114_set_region(0,0,IPS114_X_MAX-1,IPS114_Y_MAX-1);
 258   1          for(i=0;i<IPS114_X_MAX;i++)
 259   1          {
 260   2              for (j=0;j<IPS114_Y_MAX;j++)
 261   2            {
 262   3                ips114_writedata_16bit(color);         
 263   3            }
 264   2          }
 265   1      }
 266          
 267          //--------------------------------------------------------------------------------------------------------
             ------------
 268          //  @brief      液晶画点
 269          //  @param      x               坐标x方向的起点
 270          //  @param      y               坐标y方向的起点
 271          //  @param      dat             需要显示的颜色
 272          //  @return     void
 273          //  @since      v1.0
 274          //  Sample usage:               ips114_drawpoint(0,0,RED);  //坐标0,0画一个红色的点
 275          //--------------------------------------------------------------------------------------------------------
             ------------
 276          void ips114_drawpoint(uint16 x,uint16 y,uint16 color)
 277          {
 278   1          ips114_set_region(x,y,x,y);
 279   1          ips114_writedata_16bit(color);
 280   1      }
 281          
 282          
 283          
 284          //--------------------------------------------------------------------------------------------------------
             ------------
C51 COMPILER V9.01   SEEKFREE_IPS114_SPI                                                   07/03/2020 15:17:25 PAGE 6   

 285          //  @brief      液晶显示字符
 286          //  @param      x               坐标x方向的起点 参数范围 0 -（IPS114_X_MAX-1）
 287          //  @param      y               坐标y方向的起点 参数范围 0 -（IPS114_Y_MAX/16-1）
 288          //  @param      dat             需要显示的字符
 289          //  @return     void
 290          //  @since      v1.0
 291          //  Sample usage:               ips114_showchar(0,0,'x');//坐标0,0写一个字符x
 292          //--------------------------------------------------------------------------------------------------------
             ------------
 293          void ips114_showchar(uint16 x,uint16 y,const int8 dat)
 294          {
 295   1        uint8 i,j;
 296   1        uint8 temp;
 297   1          
 298   1        for(i=0; i<16; i++)
 299   1        {
 300   2          ips114_set_region(x,y+i,x+7,y+i);
 301   2          temp = tft_ascii[dat-32][i];//减32因为是取模是从空格开始取得 空格在ascii中序号是32
 302   2          for(j=0; j<8; j++)
 303   2          {
 304   3            if(temp&0x01) 
 305   3                  {
 306   4                      ips114_writedata_16bit(IPS114_PENCOLOR);
 307   4                  }
 308   3            else      ips114_writedata_16bit(IPS114_BGCOLOR);
 309   3            temp>>=1;
 310   3          }
 311   2        }
 312   1      }
 313          
 314          //--------------------------------------------------------------------------------------------------------
             ------------
 315          //  @brief      液晶显示字符串
 316          //  @param      x               坐标x方向的起点  参数范围 0 -（IPS114_X_MAX-1）
 317          //  @param      y               坐标y方向的起点  参数范围 0 -（IPS114_Y_MAX/16-1）
 318          //  @param      dat             需要显示的字符串
 319          //  @return     void
 320          //  @since      v1.0
 321          //  Sample usage:               ips114_showstr(0,0,"seekfree");
 322          //--------------------------------------------------------------------------------------------------------
             ------------
 323          void ips114_showstr(uint16 x,uint16 y,const int8 dat[])
 324          {
 325   1        uint16 j;
 326   1        
 327   1        j = 0;
 328   1        while(dat[j] != '\0')
 329   1        {
 330   2          ips114_showchar(x+8*j,y*16,dat[j]);
 331   2          j++;
 332   2        }
 333   1      }
 334          
 335          //--------------------------------------------------------------------------------------------------------
             ------------
 336          //  @brief      液晶显示8位有符号
 337          //  @param      x               坐标x方向的起点  参数范围 0 -（IPS114_X_MAX-1）
 338          //  @param      y               坐标y方向的起点  参数范围 0 -（IPS114_Y_MAX/16-1）
 339          //  @param      dat             需要显示的变量，数据类型int8
 340          //  @return     void
 341          //  @since      v1.0
 342          //  Sample usage:               ips114_showint8(0,0,x);//x为int8类型
C51 COMPILER V9.01   SEEKFREE_IPS114_SPI                                                   07/03/2020 15:17:25 PAGE 7   

 343          //--------------------------------------------------------------------------------------------------------
             ------------
 344          void ips114_showint8(uint16 x,uint16 y,int8 dat)
 345          {
 346   1        uint8 a[3];
 347   1        uint8 i;
 348   1        if(dat<0)
 349   1        {
 350   2          ips114_showchar(x,y*16,'-');
 351   2          dat = -dat;
 352   2        }
 353   1        else  ips114_showchar(x,y*16,' ');
 354   1        
 355   1        a[0] = dat/100;
 356   1        a[1] = dat/10%10;
 357   1        a[2] = dat%10;
 358   1        i = 0;
 359   1        while(i<3)
 360   1        {
 361   2          ips114_showchar(x+(8*(i+1)),y*16,'0' + a[i]);
 362   2          i++;
 363   2        }
 364   1      }
 365          
 366          //--------------------------------------------------------------------------------------------------------
             ------------
 367          //  @brief      液晶显示8位无符号
 368          //  @param      x               坐标x方向的起点 参数范围 0 -（IPS114_X_MAX-1）
 369          //  @param      y               坐标y方向的起点 参数范围 0 -（IPS114_Y_MAX/16-1）
 370          //  @param      dat             需要显示的变量，数据类型uint8
 371          //  @return     void
 372          //  @since      v1.0
 373          //  Sample usage:               ips114_showuint8(0,0,x);//x为uint8类型
 374          //--------------------------------------------------------------------------------------------------------
             ------------
 375          void ips114_showuint8(uint16 x,uint16 y,uint8 dat)
 376          {
 377   1        uint8 a[3];
 378   1        uint8 i;
 379   1        
 380   1        a[0] = dat/100;
 381   1        a[1] = dat/10%10;
 382   1        a[2] = dat%10;
 383   1        i = 0;
 384   1        while(i<3)
 385   1        {
 386   2          ips114_showchar(x+(8*i),y*16,'0' + a[i]);
 387   2          i++;
 388   2        }
 389   1        
 390   1      }
 391          
 392          //--------------------------------------------------------------------------------------------------------
             ------------
 393          //  @brief      液晶显示16位有符号
 394          //  @param      x               坐标x方向的起点 参数范围 0 -（IPS114_X_MAX-1）
 395          //  @param      y               坐标y方向的起点 参数范围 0 -（IPS114_Y_MAX/16-1）
 396          //  @param      dat             需要显示的变量，数据类型int16
 397          //  @return     void
 398          //  @since      v1.0
 399          //  Sample usage:               ips114_showint16(0,0,x);//x为int16类型
 400          //--------------------------------------------------------------------------------------------------------
C51 COMPILER V9.01   SEEKFREE_IPS114_SPI                                                   07/03/2020 15:17:25 PAGE 8   

             ------------
 401          void ips114_showint16(uint16 x,uint16 y,int16 dat)
 402          {
 403   1        uint8 a[5];
 404   1        uint8 i;
 405   1        if(dat<0)
 406   1        {
 407   2          ips114_showchar(x,y*16,'-');
 408   2          dat = -dat;
 409   2        }
 410   1        else  ips114_showchar(x,y*16,' ');
 411   1      
 412   1        a[0] = dat/10000;
 413   1        a[1] = dat/1000%10;
 414   1        a[2] = dat/100%10;
 415   1        a[3] = dat/10%10;
 416   1        a[4] = dat%10;
 417   1        
 418   1        i = 0;
 419   1        while(i<5)
 420   1        {
 421   2          ips114_showchar(x+(8*(i+1)),y*16,'0' + a[i]);
 422   2          i++;
 423   2        }
 424   1      }
 425          
 426          //--------------------------------------------------------------------------------------------------------
             ------------
 427          //  @brief      液晶显示16位无符号
 428          //  @param      x               坐标x方向的起点 参数范围 0 -（IPS114_X_MAX-1）
 429          //  @param      y               坐标y方向的起点 参数范围 0 -（IPS114_Y_MAX/16-1）
 430          //  @param      dat             需要显示的变量，数据类型uint16
 431          //  @return     void
 432          //  @since      v1.0
 433          //  Sample usage:               ips114_showuint16(0,0,x);//x为uint16类型
 434          //--------------------------------------------------------------------------------------------------------
             ------------
 435          void ips114_showuint16(uint16 x,uint16 y,uint16 dat)
 436          {
 437   1        uint8 a[5];
 438   1        uint8 i;
 439   1      
 440   1        a[0] = dat/10000;
 441   1        a[1] = dat/1000%10;
 442   1        a[2] = dat/100%10;
 443   1        a[3] = dat/10%10;
 444   1        a[4] = dat%10;
 445   1        
 446   1        i = 0;
 447   1        while(i<5)
 448   1        {
 449   2          ips114_showchar(x+(8*i),y*16,'0' + a[i]);
 450   2          i++;
 451   2        }
 452   1      }
 453          
 454          //--------------------------------------------------------------------------------------------------------
             ------------
 455          //  @brief      液晶显示32位有符号(去除整数部分无效的0)
 456          //  @param      x               坐标x方向的起点 参数范围 0 -（IPS114_X_MAX-1）
 457          //  @param      y               坐标y方向的起点 参数范围 0 -（IPS114_Y_MAX/16-1）
 458          //  @param      dat             需要显示的变量，数据类型uint32
C51 COMPILER V9.01   SEEKFREE_IPS114_SPI                                                   07/03/2020 15:17:25 PAGE 9   

 459          //  @param      num             需要显示的位数 最高10位  不包含正负号
 460          //  @return     void
 461          //  @since      v1.0
 462          //  Sample usage:               ips114_showuint32(0,0,x,3);//x可以为int32 uint16 int16 uint8 int8类型
 463          //  Sample usage:               负数会显示一个 ‘-’号   正数显示一个空格
 464          //--------------------------------------------------------------------------------------------------------
             ------------
 465          void ips114_showint32(uint16 x,uint16 y,int32 dat,uint8 num)
 466          {
 467   1          int8    buff[34];
 468   1          uint8   length;
 469   1          
 470   1          if(10<num)      num = 10;
 471   1          
 472   1          num++;
 473   1          if(0>dat)   length = zf_sprintf( &buff[0],"%d",dat);//负数
 474   1          else
 475   1          {
 476   2              buff[0] = ' ';
 477   2              length = zf_sprintf( &buff[1],"%d",dat);
 478   2              length++;
 479   2          }
 480   1          while(length < num)
 481   1          {
 482   2              buff[length] = ' ';
 483   2              length++;
 484   2          }
 485   1          buff[num] = '\0';
 486   1      
 487   1          ips114_showstr(x, y, buff); //显示数字
 488   1      }
 489          
 490          
 491          //--------------------------------------------------------------------------------------------------------
             ------------
 492          //  @brief      液晶显示浮点数(去除整数部分无效的0)
 493          //  @param      x               坐标x方向的起点 参数范围 0 -（IPS114_X_MAX-1）
 494          //  @param      y               坐标y方向的起点 参数范围 0 -（IPS114_Y_MAX/16-1）
 495          //  @param      dat             需要显示的变量，数据类型float或double
 496          //  @param      num             整数位显示长度   最高10位  
 497          //  @param      pointnum        小数位显示长度   最高6位
 498          //  @return     void
 499          //  @since      v1.0
 500          //  Sample usage:               ips114_showfloat(0,0,x,2,3);//显示浮点数   整数显示2位   小数显示三位
 501          //  @note                       特别注意当发现小数部分显示的值与你写入的值不一样的时候，
 502          //                              可能是由于浮点数精度丢失问题导致的，这并不是显示函数的问题，
 503          //                              有关问题的详情，请自行百度学习   浮点数精度丢失问题。
 504          //                              负数会显示一个 ‘-’号   正数显示一个空格
 505          //--------------------------------------------------------------------------------------------------------
             ------------
 506          void ips114_showfloat(uint16 x,uint16 y,double dat,uint8 num,uint8 pointnum)
 507          {
 508   1          uint8   length;
 509   1        int8    buff[34];
 510   1        int8    start,end,point;
 511   1      
 512   1        if(6<pointnum)  pointnum = 6;
 513   1          if(10<num)      num = 10;
 514   1              
 515   1          if(0>dat)   length = zf_sprintf( &buff[0],"%f",dat);//负数
 516   1          else
 517   1          {
C51 COMPILER V9.01   SEEKFREE_IPS114_SPI                                                   07/03/2020 15:17:25 PAGE 10  

 518   2              length = zf_sprintf( &buff[1],"%f",dat);
 519   2              length++;
 520   2          }
 521   1          point = length - 7;         //计算小数点位置
 522   1          start = point - num - 1;    //计算起始位
 523   1          end = point + pointnum + 1; //计算结束位
 524   1          while(0>start)//整数位不够  末尾应该填充空格
 525   1          {
 526   2              buff[end] = ' ';
 527   2              end++;
 528   2              start++;
 529   2          }
 530   1          
 531   1          if(0>dat)   buff[start] = '-';
 532   1          else        buff[start] = ' ';
 533   1          
 534   1          buff[end] = '\0';
 535   1      
 536   1          ips114_showstr(x, y, buff); //显示数字
 537   1      }
 538          
 539          
 540          
 541          //--------------------------------------------------------------------------------------------------------
             ------------
 542          //  @brief      汉字显示
 543          //  @param      x       横坐标 0-（IPS114_X_MAX-1）
 544          //  @param      y       纵坐标 0-（IPS114_Y_MAX-1）
 545          //  @param      size    取模的时候设置的汉字字体大小，也就是一个汉字占用的点阵长宽为多少个点，取模的时候需
             -要长宽是一样的。
 546          //  @param      *p      需要显示的汉字数组
 547          //  @param      number  需要显示多少位
 548          //  @param      color   显示颜色
 549          //  @return     void
 550          //  @since      v1.0
 551          //  Sample usage:   ips114_display_chinese(0,0,16,chinese_test[0],4,RED);//显示font文件里面的 示例
 552          //  @Note       使用PCtoLCD2002软件取模       阴码、逐行式、顺向   16*16
 553          //--------------------------------------------------------------------------------------------------------
             ------------
 554          void ips114_display_chinese(uint16 x, uint16 y, uint8 size, const uint8 *p, uint8 number, uint16 color)
 555          {
 556   1          int i, j, k; 
 557   1          uint8 temp, temp1, temp2;
 558   1          const uint8 *p_data;
 559   1          
 560   1          temp2 = size/8;
 561   1          
 562   1          ips114_set_region(x,y,number*size-1+x,y+size-1);
 563   1          
 564   1          for(i=0;i<size;i++)
 565   1          {
 566   2              temp1 = number;
 567   2              p_data = p+i*temp2;
 568   2              while(temp1--)
 569   2              {
 570   3                  for(k=0;k<temp2;k++)
 571   3                  {
 572   4                      for(j=8;j>0;j--)
 573   4                      {
 574   5                          temp = (*p_data>>(j-1)) & 0x01;
 575   5                          if(temp)    ips114_writedata_16bit(color);
 576   5                          else        ips114_writedata_16bit(IPS114_BGCOLOR);
C51 COMPILER V9.01   SEEKFREE_IPS114_SPI                                                   07/03/2020 15:17:25 PAGE 11  

 577   5                      }
 578   4                      p_data++;
 579   4                  }
 580   3                  p_data = p_data - temp2 + temp2*size;
 581   3              }   
 582   2          }
 583   1      }
 584          
 585          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   2781    ----
   CONSTANT SIZE    =      6    ----
   XDATA SIZE       =   ----     191
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
