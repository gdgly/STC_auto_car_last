C51 COMPILER V9.01   ZF_PCA_PIT                                                            07/15/2020 14:47:13 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE ZF_PCA_PIT
OBJECT MODULE PLACED IN .\Out_File\zf_pca_pit.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\..\Libraries\seekfree_libraries\zf_pca_pit.c LARGE OPTIMIZE(8,SPEED) 
                    -BROWSE INCDIR(..\..\Libraries\libraries;..\..\Libraries\seekfree_libraries;..\..\Libraries\seekfree_peripheral;..\USER\i
                    -nc;..\USER\src;..\CODE) DEBUG OBJECTEXTEND PRINT(.\Out_File\zf_pca_pit.lst) TABS(2) OBJECT(.\Out_File\zf_pca_pit.obj)

line level    source

   1          /*********************************************************************************************************
             -************
   2           * COPYRIGHT NOTICE
   3           * Copyright (c) 2020,逐飞科技
   4           * All rights reserved.
   5           * 技术讨论QQ群：一群：179029047(已满)  二群：244861897(已满)  三群：824575535
   6           *
   7           * 以下所有内容版权均属逐飞科技所有，未经允许不得用于商业用途，
   8           * 欢迎各位使用并传播本程序，修改内容时必须保留逐飞科技的版权声明。
   9           *
  10           * @file          pit
  11           * @company       成都逐飞科技有限公司
  12           * @author        逐飞科技(QQ790875685)
  13           * @version       查看doc内version文件 版本说明
  14           * @Software    MDK FOR C51 V9.60
  15           * @Target core   STC8A8K64S4
  16           * @Taobao      https://seekfree.taobao.com/
  17           * @date          2020-4-14
  18           *********************************************************************************************************
             -***********/
  19          
  20          #include "zf_pca_pit.h"
  21          #include "board.h"
  22          
  23          uint16 ccp_value[4] = {0,0,0,0};
  24          uint16 pca_time_ms[4] = {0,0,0,0};
  25          
  26          
  27          //--------------------------------------------------------------------------------------------------------
             ------------
  28          //  @brief      内部使用用户无需关心
  29          //  @param      NULL              
  30          //  @return     void
  31          //  Sample usage:               无需用户调用，用户请使用h文件中的宏定义
  32          //--------------------------------------------------------------------------------------------------------
             ------------
  33          void pca_init(PCAN_enum pca_n,PCAMODE_enum pca_mode)
  34          {
  35   1      
  36   1        CCON = 0;
  37   1        CMOD = 0x03<<1; //ECI 脚的外部输入时钟
  38   1        
  39   1        if(PCA_1 == pca_n)
  40   1        {
  41   2          switch(pca_mode)
  42   2          {
  43   3            case NONE:
  44   3            {
  45   4              CCAPM0 = 0x00;
  46   4              break;
  47   4            }
  48   3            case PWM_MODE_N0_ISR:
  49   3            {
C51 COMPILER V9.01   ZF_PCA_PIT                                                            07/15/2020 14:47:13 PAGE 2   

  50   4              CCAPM0 = 0x42;
  51   4              break;
  52   4            }
  53   3            case PWM_MODE_RISING_EDGE_ISR:
  54   3            {
  55   4              CCAPM0 = 0x63;
  56   4              break;
  57   4            }
  58   3            case PWM_MODE_FALLING_EDGE_ISR:
  59   3            {
  60   4              CCAPM0 = 0x53;
  61   4              break;
  62   4            }
  63   3            
  64   3            case PWM_MODE_BOTH_EDGE_ISR:
  65   3            {
  66   4              CCAPM0 = 0x73;
  67   4              break;
  68   4            }
  69   3            case RISING_EDGE_CAPTURE:
  70   3            {
  71   4              CCAPM0 = 0x20;
  72   4              break;
  73   4            }
  74   3            case FALLING_EDGE_CAPTURE:
  75   3            {
  76   4              CCAPM0 = 0x10;
  77   4              break;
  78   4            }
  79   3            case BOTH_EDGE_CAPTURE:
  80   3            {
  81   4              CCAPM0 = 0x30;
  82   4              break;
  83   4            }
  84   3            case SOFT_TIMER:
  85   3            {
  86   4              CCAPM0 = 0x49;
  87   4              CR = 1;
  88   4              break;
  89   4            }   
  90   3            case HIGH_SPEED_PULSE_OUTPUT:
  91   3            {
  92   4              CCAPM0 = 0x4C;
  93   4              break;
  94   4            }
  95   3          }
  96   2        }
  97   1      }
  98          
  99          //--------------------------------------------------------------------------------------------------------
             ------------
 100          //  @brief      内部使用用户无需关心
 101          //  @param      NULL              
 102          //  @return     void
 103          //  Sample usage:               无需用户调用，用户请使用h文件中的宏定义
 104          //--------------------------------------------------------------------------------------------------------
             ------------
 105          uint16 pca_get(PCAN_enum pca_n)
 106          {
 107   1        uint16 dat;
 108   1        if(PCA_1 == pca_n)
 109   1        {
C51 COMPILER V9.01   ZF_PCA_PIT                                                            07/15/2020 14:47:13 PAGE 3   

 110   2          dat = (uint8)CCAP0H << 8;
 111   2          dat = ((uint8)CCAP0L) | dat;
 112   2        }
 113   1        
 114   1        return dat;
 115   1      }
 116          //--------------------------------------------------------------------------------------------------------
             ------------
 117          //  @brief      内部使用用户无需关心
 118          //  @param      NULL              
 119          //  @return     void
 120          //  Sample usage:               无需用户调用，用户请使用h文件中的宏定义
 121          //--------------------------------------------------------------------------------------------------------
             ------------
 122          void pca_clean(PCAN_enum pca_n)
 123          {
 124   1        if(PCA_1 == pca_n)
 125   1        {
 126   2          CH = 0;
 127   2          CL = 0;
 128   2        }
 129   1      }
 130          
 131          
 132          
 133          
 134          
 135          //--------------------------------------------------------------------------------------------------------
             ------------
 136          //  @brief      周期中断初始化
 137          //  @param      pca_n       pca通道号
 138          //  @param      time        周期中断时间(1ms-45ms)
 139          //  @return     void
 140          //  Sample usage:         pca_init_interrupt_ms(PCA_0, 1); 初始化1ms一次中断
 141          //--------------------------------------------------------------------------------------------------------
             ------------
 142          void pca_init_interrupt_ms(PCAN_enum pca_n,uint16 time_ms)
 143          {
 144   1        uint16 cr_count;
 145   1        CR = 0;       // 关闭 PCA 计时器
 146   1        cr_count = (CH<<8) | CL;
 147   1        if(PCA_0 == pca_n)
 148   1        {
 149   2          time_ms = (sys_clk / (12 * (1000 / time_ms)));
 150   2          pca_time_ms[0] = time_ms;
 151   2          CCAPM0 = 0x49;
 152   2          CCAP0L = CL;
 153   2          CCAP0H = CH;
 154   2          ccp_value[0] = ccp_value[0] + pca_time_ms[0] + cr_count;
 155   2        }
 156   1        if(PCA_1 == pca_n)
 157   1        {
 158   2          time_ms = (sys_clk / (12 * (1000 / time_ms)));
 159   2          pca_time_ms[1] = time_ms;
 160   2          CCAPM1 = 0x49;
 161   2          CCAP1L = CL;
 162   2          CCAP1H = CH;
 163   2          ccp_value[1] = ccp_value[1] + pca_time_ms[1] + cr_count;
 164   2        }
 165   1      
 166   1        if(PCA_2 == pca_n)  
 167   1        {
C51 COMPILER V9.01   ZF_PCA_PIT                                                            07/15/2020 14:47:13 PAGE 4   

 168   2          time_ms = (sys_clk/(12*(1000/time_ms)));
 169   2          pca_time_ms[2] = time_ms;
 170   2          CCAPM2 = 0x49;
 171   2          CCAP2L = CL;
 172   2          CCAP2H = CH;
 173   2          ccp_value[2] = ccp_value[2] + pca_time_ms[2] + cr_count;
 174   2        }
 175   1      //  PCA_3已做延时
 176   1      //  if(PCA_3 == pca_n)  
 177   1      //  {
 178   1      //    time_ms = (sys_clk/(12*(1000/time_ms)));
 179   1      //    pca_time_ms[3] = time_ms;
 180   1      //    CCAPM3 = 0x49;
 181   1      //    CCAP3L = ccp_value[3];
 182   1      //    CCAP3H = ccp_value[3] >> 8;
 183   1      //    ccp_value[3] += pca_time_ms[3];
 184   1      //  }
 185   1        CR = 1;       // 启动 PCA 计时器
 186   1      }
 187          
 188          
 189          
 190          //--------------------------------------------------------------------------------------------------------
             ------------
 191          //  @brief      PCA重载计数器
 192          //  @param      pca_n       pca通道号
 193          //  @return     void
 194          //  Sample usage:         pca_init_interrupt_ms(PCA_0, 1); 初始化1ms一次中断
 195          //--------------------------------------------------------------------------------------------------------
             ------------
 196          void pca_reload_counter(PCAN_enum pca_n)
 197          {
 198   1        
 199   1        if(PCA_0 == pca_n)
 200   1        {
 201   2          //重载计数器
 202   2          CCAP0L = ccp_value[0];
 203   2          CCAP0H = ccp_value[0] >> 8;
 204   2          ccp_value[0] += pca_time_ms[0];
 205   2        }
 206   1      
 207   1        if(PCA_1 == pca_n)
 208   1        {
 209   2          //重载计数器
 210   2          CCAP1L = ccp_value[1];
 211   2          CCAP1H = ccp_value[1] >> 8;
 212   2          ccp_value[1] += pca_time_ms[1];
 213   2        }
 214   1        
 215   1        
 216   1        if(PCA_2 == pca_n)
 217   1        {
 218   2          //重载计数器
 219   2          CCAP2L = ccp_value[2];
 220   2          CCAP2H = ccp_value[2] >> 8;
 221   2          ccp_value[2] += pca_time_ms[2];
 222   2        }
 223   1        
 224   1        
 225   1        if(PCA_3 == pca_n)
 226   1        {
 227   2          //重载计数器
C51 COMPILER V9.01   ZF_PCA_PIT                                                            07/15/2020 14:47:13 PAGE 5   

 228   2          CCAP3L = ccp_value[3];
 229   2          CCAP3H = ccp_value[3] >> 8;
 230   2          ccp_value[3] += pca_time_ms[3];
 231   2        }
 232   1      
 233   1      }
 234          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    593    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     16       3
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
