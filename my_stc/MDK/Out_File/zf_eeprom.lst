C51 COMPILER V9.01   ZF_EEPROM                                                             07/15/2020 14:47:13 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE ZF_EEPROM
OBJECT MODULE PLACED IN .\Out_File\zf_eeprom.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\..\Libraries\seekfree_libraries\zf_eeprom.c LARGE OPTIMIZE(8,SPEED) B
                    -ROWSE INCDIR(..\..\Libraries\libraries;..\..\Libraries\seekfree_libraries;..\..\Libraries\seekfree_peripheral;..\USER\in
                    -c;..\USER\src;..\CODE) DEBUG OBJECTEXTEND PRINT(.\Out_File\zf_eeprom.lst) TABS(2) OBJECT(.\Out_File\zf_eeprom.obj)

line level    source

   1          /*********************************************************************************************************
             -************
   2           * COPYRIGHT NOTICE
   3           * Copyright (c) 2020,逐飞科技
   4           * All rights reserved.
   5           * 技术讨论QQ群：一群：179029047(已满)  二群：244861897(已满)  三群：824575535
   6           *
   7           * 以下所有内容版权均属逐飞科技所有，未经允许不得用于商业用途，
   8           * 欢迎各位使用并传播本程序，修改内容时必须保留逐飞科技的版权声明。
   9           *
  10           * @file          eeprom
  11           * @company       成都逐飞科技有限公司
  12           * @author        逐飞科技(QQ790875685)
  13           * @version       查看doc内version文件 版本说明
  14           * @Software    MDK FOR C51 V9.60
  15           * @Target core   STC8A8K64S4
  16           * @Taobao      https://seekfree.taobao.com/
  17           * @date          2020-4-14
  18           *********************************************************************************************************
             -***********/
  19          
  20          #include "zf_eeprom.h"
  21          #include "board.h"
  22          #include "intrins.h"
  23          
  24          //--------------------------------------------------------------------------------------------------------
             ------------
  25          //  @brief      初始化EEPROM
  26          //  @param      NULL
  27          //  @return     void
  28          //  Sample usage:           
  29          //--------------------------------------------------------------------------------------------------------
             ------------
  30          void iap_init(void)
  31          {
  32   1        IAP_CONTR |= 1<<7;   //使能EEPROM操作
  33   1        iap_set_tps();     //设置等待时间
  34   1      }
  35          
  36          //--------------------------------------------------------------------------------------------------------
             ------------
  37          //  @brief      关闭EEPROM
  38          //  @param      NULL
  39          //  @return     void
  40          //  Sample usage:           
  41          //--------------------------------------------------------------------------------------------------------
             ------------
  42          void iap_idle(void)
  43          {
  44   1        IAP_CONTR &= ~(1<<7);//失能EEPROM操作
  45   1      }
  46          
  47          
C51 COMPILER V9.01   ZF_EEPROM                                                             07/15/2020 14:47:13 PAGE 2   

  48          //--------------------------------------------------------------------------------------------------------
             ------------
  49          //  @brief      获取EEPROM操作失败状态位，需要软件清零
  50          //  @param      NULL
  51          //  @return     void
  52          //  Sample usage:           
  53          //                操作失败返回1;
  54          //--------------------------------------------------------------------------------------------------------
             ------------
  55          uint8 iap_get_cmd_state(void)
  56          {
  57   1        return ((IAP_CONTR&0x01) == 0x01);
  58   1      }
  59          
  60          
  61          //--------------------------------------------------------------------------------------------------------
             ------------
  62          //  @brief      设置IAP等待时间
  63          //  @param      NULL
  64          //  @return     void
  65          //  Sample usage:           
  66          //--------------------------------------------------------------------------------------------------------
             ------------
  67          void iap_set_tps(void)
  68          {
  69   1        IAP_CONTR &= (~0x07);
  70   1        if(sys_clk >= (30*1000*1000))
  71   1        {
  72   2          IAP_CONTR |= 0x00;
  73   2        }
  74   1        else if((sys_clk <= (30*1000*1000)) && (sys_clk >= (24*1000*1000)))
  75   1        {
  76   2          IAP_CONTR |= 0x01;
  77   2        }
  78   1        else if((sys_clk <= (24*1000*1000)) && (sys_clk >= (20*1000*1000)))
  79   1        {
  80   2          IAP_CONTR |= 0x02;
  81   2        }
  82   1        else if((sys_clk <= (20*1000*1000)) && (sys_clk >= (12*1000*1000)))
  83   1        {
  84   2          IAP_CONTR |= 0x03;
  85   2        }
  86   1        else if((sys_clk <= (12*1000*1000)) && (sys_clk >= (6*1000*1000)))
  87   1        {
  88   2          IAP_CONTR |= 0x04;
  89   2        }
  90   1        else if((sys_clk <= (6*1000*1000)) && (sys_clk >= (3*1000*1000)))
  91   1        {
  92   2          IAP_CONTR |= 0x05;
  93   2        }
  94   1        else if((sys_clk <= (3*1000*1000)) && (sys_clk >= (2*1000*1000)))
  95   1        {
  96   2          IAP_CONTR |= 0x06;
  97   2        }
  98   1        else if((sys_clk <= (2*1000*1000)) && (sys_clk >= (1*1000*1000)))
  99   1        {
 100   2          IAP_CONTR |= 0x07;
 101   2        }
 102   1      
 103   1      }
 104          
 105          
C51 COMPILER V9.01   ZF_EEPROM                                                             07/15/2020 14:47:13 PAGE 3   

 106          //--------------------------------------------------------------------------------------------------------
             ------------
 107          //  @brief      EEPROM读取多个字节
 108          //  @param      addr      需要读取的eeprom地址
 109          //  @param      *buf      需要读取的数据地址
 110          //  @param      len       需要读取的数据长度
 111          //  @return     void
 112          //  Sample usage:               uint8 str[10];
 113          //                iap_read_bytes(0x00,str,10);
 114          //                将0x00-0x0A地址中的数据，读取到str中。
 115          //--------------------------------------------------------------------------------------------------------
             ------------
 116          void iap_read_bytes(uint16 addr, uint8 *buf, uint8 len)
 117          {
 118   1      
 119   1        IAP_CMD = 1;        //设置 IAP 读命令 
 120   1      
 121   1        while(len--)
 122   1        {
 123   2          IAP_ADDRL = addr;     //设置 IAP 低地址
 124   2          IAP_ADDRH = addr >> 8;  //设置 IAP 高地址
 125   2          IAP_TRIG = 0x5a;    //写触发命令(0x5a)
 126   2          IAP_TRIG = 0xa5;    //写触发命令(0xa5)  
 127   2          *buf++ = IAP_DATA;    //读 IAP 数据
 128   2          addr++;
 129   2          
 130   2          _nop_(); 
 131   2        }
 132   1      }
 133          
 134          
 135          //--------------------------------------------------------------------------------------------------------
             ------------
 136          //  @brief      EEPROM写多个字节
 137          //  @param      addr      需要写的eeprom地址
 138          //  @param      *buf      需要写的数据地址
 139          //  @param      len       需要写的数据长度
 140          //  @return     void
 141          //  Sample usage:           iap_write_bytes(0x00,(uint8 *)"0123456789";,10);
 142          //                将"0123456789"写入0x00-0x0A地址中;
 143          //--------------------------------------------------------------------------------------------------------
             ------------
 144          void iap_write_bytes(uint16 addr, uint8 *buf, uint8 len)
 145          {
 146   1      
 147   1        IAP_CMD = 2;        //设置 IAP 读命令 
 148   1        
 149   1        while(len--)
 150   1        {
 151   2          IAP_ADDRL = addr;     //设置 IAP 低地址
 152   2          IAP_ADDRH = addr >> 8;  //设置 IAP 高地址
 153   2          IAP_DATA = *buf++;    //写 IAP 数据
 154   2          addr++;
 155   2      
 156   2          IAP_TRIG = 0x5a;    //写触发命令(0x5a)
 157   2          IAP_TRIG = 0xa5;    //写触发命令(0xa5)
 158   2          _nop_(); 
 159   2        }
 160   1      }
 161          
 162          
 163          
C51 COMPILER V9.01   ZF_EEPROM                                                             07/15/2020 14:47:13 PAGE 4   

 164          //--------------------------------------------------------------------------------------------------------
             ------------
 165          //  @brief      EEPROM擦除目标地址所在的一页（1扇区/512字节）
 166          //  @param      addr      需要写的eeprom地址
 167          //  @return     void
 168          //  Sample usage:           iap_erase(0x20);
 169          //                擦除0x00-0x200的数据
 170          //--------------------------------------------------------------------------------------------------------
             ------------
 171          void iap_erase_page(uint16 addr) 
 172          { 
 173   1      
 174   1        IAP_CMD = 3;        //设置 IAP 擦除命令
 175   1      
 176   1        IAP_ADDRL = addr;       //设置 IAP 低地址
 177   1        IAP_ADDRH = addr >> 8;    //设置 IAP 高地址
 178   1        IAP_TRIG = 0x5a;      //写触发命令(0x5a)
 179   1        IAP_TRIG = 0xa5;      //写触发命令(0xa5)
 180   1        _nop_(); 
 181   1      
 182   1      }
 183          
 184          
 185          
 186          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    580    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      12
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
