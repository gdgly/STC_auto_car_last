C51 COMPILER V9.01   ZF_IIC                                                                07/15/2020 14:47:12 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE ZF_IIC
OBJECT MODULE PLACED IN .\Out_File\zf_iic.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\..\Libraries\seekfree_libraries\zf_iic.c LARGE OPTIMIZE(8,SPEED) BROW
                    -SE INCDIR(..\..\Libraries\libraries;..\..\Libraries\seekfree_libraries;..\..\Libraries\seekfree_peripheral;..\USER\inc;.
                    -.\USER\src;..\CODE) DEBUG OBJECTEXTEND PRINT(.\Out_File\zf_iic.lst) TABS(2) OBJECT(.\Out_File\zf_iic.obj)

line level    source

   1          /*********************************************************************************************************
             -************
   2           * COPYRIGHT NOTICE
   3           * Copyright (c) 2020,逐飞科技
   4           * All rights reserved.
   5           * 技术讨论QQ群：一群：179029047(已满)  二群：244861897(已满)  三群：824575535
   6           *
   7           * 以下所有内容版权均属逐飞科技所有，未经允许不得用于商业用途，
   8           * 欢迎各位使用并传播本程序，修改内容时必须保留逐飞科技的版权声明。
   9           *
  10           * @file          iic
  11           * @company       成都逐飞科技有限公司
  12           * @author        逐飞科技(QQ790875685)
  13           * @version       查看doc内version文件 版本说明
  14           * @Software    MDK FOR C51 V9.60
  15           * @Target core   STC8A8K64S4
  16           * @Taobao      https://seekfree.taobao.com/
  17           * @date          2020-4-14
  18           *********************************************************************************************************
             -***********/
  19          
  20          #include "zf_iic.h"
  21          
  22          
  23          
  24          //--------------------------------------------------------------------------------------------------------
             ------------
  25          //  @brief      内部使用用户无需关心
  26          //  @param      NULL              
  27          //  @return     void
  28          //  Sample usage:               无需用户调用，用户请使用h文件中的宏定义
  29          //--------------------------------------------------------------------------------------------------------
             ------------
  30          void iic_delay_us(uint16 x) //33.1776Mhz
  31          {
  32   1          uint8 i;
  33   1          while(x--)
  34   1          {
  35   2          i = 9;
  36   2          while (--i);
  37   2          }
  38   1      }
  39          
  40          
  41          //--------------------------------------------------------------------------------------------------------
             ------------
  42          //  @brief      内部使用用户无需关心
  43          //  @param      NULL              
  44          //  @return     void
  45          //  Sample usage:               无需用户调用，用户请使用h文件中的宏定义
  46          //--------------------------------------------------------------------------------------------------------
             ------------
  47          uint8 wait(void)
C51 COMPILER V9.01   ZF_IIC                                                                07/15/2020 14:47:12 PAGE 2   

  48          {
  49   1          uint16 count = 0;
  50   1          uint8 ret = IIC_SEND_OK;
  51   1          while (!(I2CMSST & 0x40))
  52   1          {
  53   2              iic_delay_us(1);
  54   2              if(count++ >= 30)//等待超过30us，则退出等待。
  55   2              {
  56   3                  ret = IIC_SEND_FAIL;
  57   3                  break;
  58   3              }
  59   2          }
  60   1          I2CMSST &= ~0x40;
  61   1          return ret;
  62   1      }
  63          
  64          //--------------------------------------------------------------------------------------------------------
             ------------
  65          //  @brief      内部使用用户无需关心
  66          //  @param      NULL              
  67          //  @return     void
  68          //  Sample usage:               无需用户调用，用户请使用h文件中的宏定义
  69          //--------------------------------------------------------------------------------------------------------
             ------------
  70          uint8 start(void)
  71          {
  72   1          uint8 ret;
  73   1          I2CMSCR = 0x01;                             //发送start命令
  74   1          ret = wait();
  75   1          return ret;
  76   1      }
  77          
  78          //--------------------------------------------------------------------------------------------------------
             ------------
  79          //  @brief      内部使用用户无需关心
  80          //  @param      NULL              
  81          //  @return     void
  82          //  Sample usage:               无需用户调用，用户请使用h文件中的宏定义
  83          //--------------------------------------------------------------------------------------------------------
             ------------
  84          uint8 send_data(char dat)
  85          {
  86   1          uint8 ret;
  87   1          I2CTXD = dat;                               //写数据到数据缓冲区
  88   1          I2CMSCR = 0x02;                             //发送SEND命令
  89   1          ret = wait();
  90   1          return ret;
  91   1      }
  92          
  93          //--------------------------------------------------------------------------------------------------------
             ------------
  94          //  @brief      内部使用用户无需关心
  95          //  @param      NULL              
  96          //  @return     void
  97          //  Sample usage:               无需用户调用，用户请使用h文件中的宏定义
  98          //--------------------------------------------------------------------------------------------------------
             ------------
  99          uint8 recv_ack(void)
 100          {
 101   1          uint8 ret;
 102   1          I2CMSCR = 0x03;                             //发送读ACK命令
 103   1          ret = wait();
C51 COMPILER V9.01   ZF_IIC                                                                07/15/2020 14:47:12 PAGE 3   

 104   1          return ret;
 105   1      }
 106          
 107          //--------------------------------------------------------------------------------------------------------
             ------------
 108          //  @brief      内部使用用户无需关心
 109          //  @param      NULL              
 110          //  @return     void
 111          //  Sample usage:               无需用户调用，用户请使用h文件中的宏定义
 112          //--------------------------------------------------------------------------------------------------------
             ------------
 113          char recv_data(void)              //接收数据
 114          {
 115   1          I2CMSCR = 0x04;                             //发送RECV命令
 116   1          wait();
 117   1          return I2CRXD;
 118   1      }
 119          
 120          //--------------------------------------------------------------------------------------------------------
             ------------
 121          //  @brief      内部使用用户无需关心
 122          //  @param      NULL              
 123          //  @return     void
 124          //  Sample usage:               无需用户调用，用户请使用h文件中的宏定义
 125          //--------------------------------------------------------------------------------------------------------
             ------------
 126          uint8 send_ack(void)
 127          {
 128   1        uint8 ret;
 129   1          I2CMSST = 0x00;                             //设置ACK信号
 130   1          I2CMSCR = 0x05;                             //发送ACK命令
 131   1          ret = wait();
 132   1          return ret;
 133   1      }
 134          
 135          //--------------------------------------------------------------------------------------------------------
             ------------
 136          //  @brief      内部使用用户无需关心
 137          //  @param      NULL              
 138          //  @return     void
 139          //  Sample usage:               无需用户调用，用户请使用h文件中的宏定义
 140          //--------------------------------------------------------------------------------------------------------
             ------------
 141          void send_nak(void)
 142          {
 143   1          I2CMSST = 0x01;                             //设置NAK信号
 144   1          I2CMSCR = 0x05;                             //发送ACK命令
 145   1          wait();
 146   1      }
 147          
 148          //--------------------------------------------------------------------------------------------------------
             ------------
 149          //  @brief      内部使用用户无需关心
 150          //  @param      NULL              
 151          //  @return     void
 152          //  Sample usage:               无需用户调用，用户请使用h文件中的宏定义
 153          //--------------------------------------------------------------------------------------------------------
             ------------
 154          uint8 stop(void)
 155          {
 156   1          uint8 ret;
 157   1          I2CMSCR = 0x06;                             //发送stop命令
C51 COMPILER V9.01   ZF_IIC                                                                07/15/2020 14:47:12 PAGE 4   

 158   1          ret = wait();
 159   1          return ret;
 160   1      }
 161          
 162          //--------------------------------------------------------------------------------------------------------
             ------------
 163          //  @brief      硬件IIC初始化
 164          //  @param      iic_n           选择IIC模块
 165          //  @param      scl_pin         选择SCL引脚
 166          //  @param      sda_pin         选择SDA引脚
 167          //  @param      wait_time       I2C总线速度（等待时钟数）控制: 速度设置为等待wait_time*2+1个时钟
 168          //  @return     void
 169          //  Sample usage:               
 170          //--------------------------------------------------------------------------------------------------------
             ------------
 171          void  iic_init(IICN_enum iic_n,IIC_PIN_enum scl_pin,IIC_PIN_enum sda_pin,uint32 wait_time)
 172          {
 173   1        scl_pin = scl_pin;
 174   1        sda_pin = sda_pin;
 175   1        
 176   1          P_SW2 |= 1<<7;  //将EAXFR寄存器置1，这样才能使用特殊功能寄存器为扩展SFR，访问逻辑地址位于 XDATA 区域
 177   1        
 178   1        P_SW2 &= ~(0x03<<4);  //清除引脚切换位
 179   1          switch(iic_n) 
 180   1          {
 181   2          case IIC_1:
 182   2              P_SW2 |= (0x00<<4); //SCL:P1.5  SDA:P1.4
 183   2              break;
 184   2          case IIC_2:
 185   2              P_SW2 |= (0x01<<4); //SCL:P2.5  SDA:P2.4
 186   2              break;
 187   2          case IIC_3:
 188   2              P_SW2 |= (0x02<<4); //SCL:P7.7  SDA:P7.6
 189   2              break;
 190   2          case IIC_4:
 191   2              P_SW2 |= (0x03<<4); //SCL:P3.2  SDA:P3.3
 192   2              break;
 193   2          }
 194   1        
 195   1      
 196   1          I2CCFG |= 1<<6;   //主机模式
 197   1          I2CCFG |= 1<<7;   //使能IIC
 198   1          I2CCFG |= wait_time;//速度设置为等待wait_time*2+1个时钟
 199   1          I2CMSST = 0x00;   //主机状态寄存器
 200   1        
 201   1        P_SW2 &= ~(1<<7); 
 202   1      }
 203          
 204          //--------------------------------------------------------------------------------------------------------
             ------------
 205          //  @brief      写入一个字节数据到I2C设备指定寄存器地址
 206          //  @param      slaveid     从机地址(7位地址)
 207          //  @param      reg         从机寄存器地址
 208          //  @param      dat         需要发送的数据
 209          //  @return                 返回的状态值 0：成功  1：失败
 210          //  @since      v2.0
 211          //  Sample usage:         iic_write_reg(0x2D, 0x50,2);     //写入数据2到0x50地址，从机地址为0x2D
 212          //--------------------------------------------------------------------------------------------------------
             ------------
 213          uint8 iic_write_reg(uint8 dev_add, uint8 reg, uint8 dat)
 214          {
 215   1          if(start() != IIC_SEND_OK)
C51 COMPILER V9.01   ZF_IIC                                                                07/15/2020 14:47:12 PAGE 5   

 216   1              return IIC_SEND_FAIL;
 217   1          if(send_data((dev_add<<1) | 0x00) != IIC_SEND_OK)
 218   1              return IIC_SEND_FAIL;
 219   1          if(recv_ack() != IIC_SEND_OK)
 220   1              return IIC_SEND_FAIL;
 221   1          if(send_data(reg) != IIC_SEND_OK)
 222   1              return IIC_SEND_FAIL;
 223   1          if(recv_ack() != IIC_SEND_OK)
 224   1              return IIC_SEND_FAIL;
 225   1          if(send_data(dat) != IIC_SEND_OK)
 226   1              return IIC_SEND_FAIL;
 227   1          if(recv_ack() != IIC_SEND_OK)
 228   1              return IIC_SEND_FAIL;
 229   1          if(stop() != IIC_SEND_OK)
 230   1              return IIC_SEND_FAIL;
 231   1      
 232   1      
 233   1          return IIC_SEND_OK;
 234   1      }
 235          
 236          //--------------------------------------------------------------------------------------------------------
             ------------
 237          //  @brief      读取I2C设备指定地址寄存器的数据
 238          //  @param      dev_add     从机地址(7位地址)
 239          //  @param      reg         从机寄存器地址
 240          //  @param      dat         数据地址
 241          //  @return                 读取的寄存器值
 242          //  @since      v1.0
 243          //  Sample usage:         uint8 value = i2c_read_reg(i2c0, 0x2D, 0x50);//读取0x50地址的数据，从机地址为0x2D
 244          //--------------------------------------------------------------------------------------------------------
             ------------
 245          uint8 iic_read_reg(uint8 dev_add, uint8 reg, uint8 *dat)
 246          {
 247   1      
 248   1        if(start() != IIC_SEND_OK)
 249   1              return IIC_SEND_FAIL;
 250   1        
 251   1          if(send_data((dev_add<<1) | 0x00) != IIC_SEND_OK)
 252   1              return IIC_SEND_FAIL;
 253   1          if(recv_ack() != IIC_SEND_OK)
 254   1              return IIC_SEND_FAIL;
 255   1        
 256   1          if(send_data(reg) != IIC_SEND_OK)
 257   1              return IIC_SEND_FAIL;
 258   1          if(recv_ack() != IIC_SEND_OK)
 259   1              return IIC_SEND_FAIL;
 260   1        
 261   1        
 262   1      //   if(start() != IIC_SEND_OK)
 263   1      //        return IIC_SEND_FAIL;
 264   1         
 265   1          if(send_data((dev_add<<1) | 0x01) != IIC_SEND_OK)
 266   1              return IIC_SEND_FAIL;
 267   1        
 268   1          if(recv_ack() != IIC_SEND_OK)
 269   1              return IIC_SEND_FAIL;
 270   1        
 271   1        *dat = recv_data();
 272   1        
 273   1          if(send_ack() != IIC_SEND_OK)
 274   1              return IIC_SEND_FAIL;
 275   1        
C51 COMPILER V9.01   ZF_IIC                                                                07/15/2020 14:47:12 PAGE 6   

 276   1          if(stop() != IIC_SEND_OK)
 277   1              return IIC_SEND_FAIL;
 278   1        
 279   1          return IIC_SEND_OK;
 280   1      }
 281          
 282          //--------------------------------------------------------------------------------------------------------
             ------------
 283          //  @brief      读取I2C设备指定地址寄存器的数据
 284          //  @param      dev_add     从机地址(7位地址)
 285          //  @param      reg         从机寄存器地址
 286          //  @param      dat         读取的数据存储的地址
 287          //  @param      num         读取字节数
 288          //  @return     void
 289          //  @since      v1.0
 290          //  Sample usage:         uint8 value = i2c_read_reg(0x2D, 0x50, 10, buf);//读取0x50地址的数据，从机地址为0
             -x2D开始的10个字节
 291          //--------------------------------------------------------------------------------------------------------
             ------------
 292          uint8 iic_read_reg_bytes(uint8 dev_add, uint8 reg, uint8 *dat, uint8 num)
 293          {
 294   1      
 295   1        if(start() != IIC_SEND_OK)
 296   1              return IIC_SEND_FAIL;
 297   1        
 298   1          if(send_data((dev_add<<1) | 0x00) != IIC_SEND_OK)
 299   1              return IIC_SEND_FAIL;
 300   1          if(recv_ack() != IIC_SEND_OK)
 301   1              return IIC_SEND_FAIL;
 302   1        
 303   1          if(send_data(reg) != IIC_SEND_OK)
 304   1              return IIC_SEND_FAIL;
 305   1          if(recv_ack() != IIC_SEND_OK)
 306   1              return IIC_SEND_FAIL;
 307   1      
 308   1        if(send_data((dev_add<<1) | 0x01) != IIC_SEND_OK)
 309   1          return IIC_SEND_FAIL;
 310   1        if(recv_ack() != IIC_SEND_OK)
 311   1          return IIC_SEND_FAIL;
 312   1      
 313   1          while(--num)
 314   1          {
 315   2              *dat = recv_data(); //读取数据
 316   2          if(send_ack() != IIC_SEND_OK)
 317   2          {
 318   3            return IIC_SEND_FAIL;
 319   3          }
 320   2              dat++;
 321   2          }
 322   1        
 323   1        *dat = recv_data();
 324   1        
 325   1        if(send_ack() != IIC_SEND_OK)
 326   1          return IIC_SEND_FAIL;
 327   1        
 328   1        if(stop() != IIC_SEND_OK)
 329   1          return IIC_SEND_FAIL;
 330   1        
 331   1        return IIC_SEND_OK;
 332   1      }
 333          
 334          //--------------------------------------------------------------------------------------------------------
C51 COMPILER V9.01   ZF_IIC                                                                07/15/2020 14:47:12 PAGE 7   

             ------------
 335          //  @brief      硬件IIC引脚切换函数
 336          //  @param      iic_n         I2C通道号及引脚
 337          //  @param      scl_pin         选择SCL引脚
 338          //  @param      sda_pin         选择SDA引脚
 339          //  Sample usage:       
 340          //--------------------------------------------------------------------------------------------------------
             ------------
 341          void iic_change_pin(IICN_enum iic_n,IIC_PIN_enum scl_pin,IIC_PIN_enum sda_pin)
 342          {
 343   1        scl_pin = scl_pin;
 344   1        sda_pin = sda_pin;
 345   1          P_SW2 |= 1<<7;  //将EAXFR寄存器置1，这样才能使用特殊功能寄存器为扩展SFR，访问逻辑地址位于 XDATA 区域
 346   1        
 347   1        P_SW2 &= ~(0x03<<4);  //清除引脚切换位
 348   1          switch(iic_n) 
 349   1          {
 350   2          case IIC_1:
 351   2              P_SW2 |= (0x00<<4); //SCL:P1.5  SDA:P1.4
 352   2              break;
 353   2          case IIC_2:
 354   2              P_SW2 |= (0x01<<4); //SCL:P2.5  SDA:P2.4
 355   2              break;
 356   2          case IIC_3:
 357   2              P_SW2 |= (0x02<<4); //SCL:P7.7  SDA:P7.6
 358   2              break;
 359   2          case IIC_4:
 360   2              P_SW2 |= (0x03<<4); //SCL:P3.2  SDA:P3.3
 361   2              break;
 362   2          }
 363   1        
 364   1        P_SW2 &= ~(1<<7);
 365   1      
 366   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    642    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      21
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
