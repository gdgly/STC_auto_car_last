/*
祖传算法2
*/

算法1中角度环和角速度环是相加串联的，产生的结果是减小角度变化
不论是在期望值附近，角速度环可以减少静态误差（减少扰动产生的角度变化）
还是与期望相距较大，角速度环也减少回复的速度（但是也避免超调）

算法2
通过角速度环作内环控制，角度环作外环控制，意思
为把角度环的输出值当作角速度环的期望，再通过角速度环输出PWM

主动控制过程：
当角度变化(50->60，期望60)此过程中，iError = Point-Nowdata为正，位置式PID输出为正(Kp\KD>0)且过程中减小
那么角速度期望为正且减小，与当前角速度相减，得到iError,如果  
iError>0角速度过大(通常过大，因为P足够大甚至超调)，通过角速度PID，得到一个PWM,且过程不断减小(这是我们希望的结果)
iError<0角速度过小，通过角速度PID，得到一个PWM,且过程不断增大

理想控制过程：角度在期望周围，那么通过角度环PID得出的值较小，看成角速度期望，即目标角速度较小
再通过更灵敏的角速度环PID，得出的PWM起到的控制更为精细。//至于角速度环PID怎么调，考虑到直接输出PWM,所以先计算占40%的量

被动控制过程：
当角度变化(60->50->60，期望60)此过程是受扰动后再回复两个过程，角速度绝对值先被动变大，与期望角速度相减
iError，通...，得到一个强控制来抵制扰动。
